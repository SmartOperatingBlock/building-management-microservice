[{"name":"CELSIUS","description":"entity.environment.TemperatureUnit.CELSIUS","location":"building-management-microservice/entity.environment/-temperature-unit/-c-e-l-s-i-u-s/index.html","searchKeys":["CELSIUS","CELSIUS","entity.environment.TemperatureUnit.CELSIUS"]},{"name":"ENDOSCOPE","description":"entity.medicaltechnology.MedicalTechnologyType.ENDOSCOPE","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-type/-e-n-d-o-s-c-o-p-e/index.html","searchKeys":["ENDOSCOPE","ENDOSCOPE","entity.medicaltechnology.MedicalTechnologyType.ENDOSCOPE"]},{"name":"LUX","description":"entity.environment.LightUnit.LUX","location":"building-management-microservice/entity.environment/-light-unit/-l-u-x/index.html","searchKeys":["LUX","LUX","entity.environment.LightUnit.LUX"]},{"name":"OPERATING_ROOM","description":"application.presenter.api.model.RoomApiDtoType.OPERATING_ROOM","location":"building-management-microservice/application.presenter.api.model/-room-api-dto-type/-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["OPERATING_ROOM","OPERATING_ROOM","application.presenter.api.model.RoomApiDtoType.OPERATING_ROOM"]},{"name":"OPERATING_ROOM","description":"entity.zone.RoomType.OPERATING_ROOM","location":"building-management-microservice/entity.zone/-room-type/-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["OPERATING_ROOM","OPERATING_ROOM","entity.zone.RoomType.OPERATING_ROOM"]},{"name":"PRE_OPERATING_ROOM","description":"application.presenter.api.model.RoomApiDtoType.PRE_OPERATING_ROOM","location":"building-management-microservice/application.presenter.api.model/-room-api-dto-type/-p-r-e_-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["PRE_OPERATING_ROOM","PRE_OPERATING_ROOM","application.presenter.api.model.RoomApiDtoType.PRE_OPERATING_ROOM"]},{"name":"PRE_OPERATING_ROOM","description":"entity.zone.RoomType.PRE_OPERATING_ROOM","location":"building-management-microservice/entity.zone/-room-type/-p-r-e_-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["PRE_OPERATING_ROOM","PRE_OPERATING_ROOM","entity.zone.RoomType.PRE_OPERATING_ROOM"]},{"name":"XRAY","description":"entity.medicaltechnology.MedicalTechnologyType.XRAY","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-type/-x-r-a-y/index.html","searchKeys":["XRAY","XRAY","entity.medicaltechnology.MedicalTechnologyType.XRAY"]},{"name":"abstract fun createMedicalTechnology(medicalTechnology: MedicalTechnology): MedicalTechnology?","description":"usecase.repository.MedicalTechnologyRepository.createMedicalTechnology","location":"building-management-microservice/usecase.repository/-medical-technology-repository/create-medical-technology.html","searchKeys":["createMedicalTechnology","abstract fun createMedicalTechnology(medicalTechnology: MedicalTechnology): MedicalTechnology?","usecase.repository.MedicalTechnologyRepository.createMedicalTechnology"]},{"name":"abstract fun createRoom(room: Room): Room?","description":"usecase.repository.RoomRepository.createRoom","location":"building-management-microservice/usecase.repository/-room-repository/create-room.html","searchKeys":["createRoom","abstract fun createRoom(room: Room): Room?","usecase.repository.RoomRepository.createRoom"]},{"name":"abstract fun createRoomDigitalTwin(room: Room): Boolean","description":"application.controller.manager.RoomDigitalTwinManager.createRoomDigitalTwin","location":"building-management-microservice/application.controller.manager/-room-digital-twin-manager/create-room-digital-twin.html","searchKeys":["createRoomDigitalTwin","abstract fun createRoomDigitalTwin(room: Room): Boolean","application.controller.manager.RoomDigitalTwinManager.createRoomDigitalTwin"]},{"name":"abstract fun deleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID): Boolean","description":"usecase.repository.MedicalTechnologyRepository.deleteMedicalTechnology","location":"building-management-microservice/usecase.repository/-medical-technology-repository/delete-medical-technology.html","searchKeys":["deleteMedicalTechnology","abstract fun deleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID): Boolean","usecase.repository.MedicalTechnologyRepository.deleteMedicalTechnology"]},{"name":"abstract fun deleteRoom(roomId: RoomID): Boolean","description":"usecase.repository.RoomRepository.deleteRoom","location":"building-management-microservice/usecase.repository/-room-repository/delete-room.html","searchKeys":["deleteRoom","abstract fun deleteRoom(roomId: RoomID): Boolean","usecase.repository.RoomRepository.deleteRoom"]},{"name":"abstract fun deleteRoomDigitalTwin(roomId: RoomID): Boolean","description":"application.controller.manager.RoomDigitalTwinManager.deleteRoomDigitalTwin","location":"building-management-microservice/application.controller.manager/-room-digital-twin-manager/delete-room-digital-twin.html","searchKeys":["deleteRoomDigitalTwin","abstract fun deleteRoomDigitalTwin(roomId: RoomID): Boolean","application.controller.manager.RoomDigitalTwinManager.deleteRoomDigitalTwin"]},{"name":"abstract fun execute(): T","description":"application.service.Service.ApplicationService.execute","location":"building-management-microservice/application.service/-service/-application-service/execute.html","searchKeys":["execute","abstract fun execute(): T","application.service.Service.ApplicationService.execute"]},{"name":"abstract fun execute(): X","description":"usecase.UseCase.execute","location":"building-management-microservice/usecase/-use-case/execute.html","searchKeys":["execute","abstract fun execute(): X","usecase.UseCase.execute"]},{"name":"abstract fun findBy(medicalTechnologyId: MedicalTechnologyID): MedicalTechnology?","description":"usecase.repository.MedicalTechnologyRepository.findBy","location":"building-management-microservice/usecase.repository/-medical-technology-repository/find-by.html","searchKeys":["findBy","abstract fun findBy(medicalTechnologyId: MedicalTechnologyID): MedicalTechnology?","usecase.repository.MedicalTechnologyRepository.findBy"]},{"name":"abstract fun findBy(roomId: RoomID): Room?","description":"application.controller.manager.RoomDigitalTwinManager.findBy","location":"building-management-microservice/application.controller.manager/-room-digital-twin-manager/find-by.html","searchKeys":["findBy","abstract fun findBy(roomId: RoomID): Room?","application.controller.manager.RoomDigitalTwinManager.findBy"]},{"name":"abstract fun findBy(roomId: RoomID, dateTime: Date?): Room?","description":"usecase.repository.RoomRepository.findBy","location":"building-management-microservice/usecase.repository/-room-repository/find-by.html","searchKeys":["findBy","abstract fun findBy(roomId: RoomID, dateTime: Date?): Room?","usecase.repository.RoomRepository.findBy"]},{"name":"abstract fun getRooms(): Set<Room>","description":"usecase.repository.RoomRepository.getRooms","location":"building-management-microservice/usecase.repository/-room-repository/get-rooms.html","searchKeys":["getRooms","abstract fun getRooms(): Set<Room>","usecase.repository.RoomRepository.getRooms"]},{"name":"abstract fun mapTechnologyTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID): Boolean","description":"usecase.repository.MedicalTechnologyRepository.mapTechnologyTo","location":"building-management-microservice/usecase.repository/-medical-technology-repository/map-technology-to.html","searchKeys":["mapTechnologyTo","abstract fun mapTechnologyTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID): Boolean","usecase.repository.MedicalTechnologyRepository.mapTechnologyTo"]},{"name":"abstract val roomDigitalTwinManager: RoomDigitalTwinManager","description":"infrastructure.provider.ManagerProvider.roomDigitalTwinManager","location":"building-management-microservice/infrastructure.provider/-manager-provider/room-digital-twin-manager.html","searchKeys":["roomDigitalTwinManager","abstract val roomDigitalTwinManager: RoomDigitalTwinManager","infrastructure.provider.ManagerProvider.roomDigitalTwinManager"]},{"name":"class APIController(provider: ManagerProvider)","description":"infrastructure.api.APIController","location":"building-management-microservice/infrastructure.api/-a-p-i-controller/index.html","searchKeys":["APIController","class APIController(provider: ManagerProvider)","infrastructure.api.APIController"]},{"name":"class CreateRoom(room: Room, roomRepository: RoomRepository) : Service.ApplicationService<Room?> ","description":"application.service.Service.CreateRoom","location":"building-management-microservice/application.service/-service/-create-room/index.html","searchKeys":["CreateRoom","class CreateRoom(room: Room, roomRepository: RoomRepository) : Service.ApplicationService<Room?> ","application.service.Service.CreateRoom"]},{"name":"class DeleteRoom(roomID: RoomID, roomRepository: RoomRepository) : Service.ApplicationService<Boolean> ","description":"application.service.Service.DeleteRoom","location":"building-management-microservice/application.service/-service/-delete-room/index.html","searchKeys":["DeleteRoom","class DeleteRoom(roomID: RoomID, roomRepository: RoomRepository) : Service.ApplicationService<Boolean> ","application.service.Service.DeleteRoom"]},{"name":"class DigitalTwinManager : RoomDigitalTwinManager","description":"infrastructure.digitaltwins.DigitalTwinManager","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/index.html","searchKeys":["DigitalTwinManager","class DigitalTwinManager : RoomDigitalTwinManager","infrastructure.digitaltwins.DigitalTwinManager"]},{"name":"class GetRoom(roomID: RoomID, roomRepository: RoomRepository, dateTime: Date? = null) : Service.ApplicationService<Room?> ","description":"application.service.Service.GetRoom","location":"building-management-microservice/application.service/-service/-get-room/index.html","searchKeys":["GetRoom","class GetRoom(roomID: RoomID, roomRepository: RoomRepository, dateTime: Date? = null) : Service.ApplicationService<Room?> ","application.service.Service.GetRoom"]},{"name":"class ManagerProviderImpl : ManagerProvider","description":"infrastructure.provider.ManagerProviderImpl","location":"building-management-microservice/infrastructure.provider/-manager-provider-impl/index.html","searchKeys":["ManagerProviderImpl","class ManagerProviderImpl : ManagerProvider","infrastructure.provider.ManagerProviderImpl"]},{"name":"class RoomController(roomDtManager: RoomDigitalTwinManager) : RoomRepository","description":"application.controller.RoomController","location":"building-management-microservice/application.controller/-room-controller/index.html","searchKeys":["RoomController","class RoomController(roomDtManager: RoomDigitalTwinManager) : RoomRepository","application.controller.RoomController"]},{"name":"data class EnvironmentalDataApiDto(val temperature: ValueWithUnit<Double>? = null, val humidity: Double? = null, val luminosity: ValueWithUnit<Double>? = null, val presence: Boolean? = null)","description":"application.presenter.api.model.EnvironmentalDataApiDto","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/index.html","searchKeys":["EnvironmentalDataApiDto","data class EnvironmentalDataApiDto(val temperature: ValueWithUnit<Double>? = null, val humidity: Double? = null, val luminosity: ValueWithUnit<Double>? = null, val presence: Boolean? = null)","application.presenter.api.model.EnvironmentalDataApiDto"]},{"name":"data class Humidity(val percentage: Double)","description":"entity.environment.Humidity","location":"building-management-microservice/entity.environment/-humidity/index.html","searchKeys":["Humidity","data class Humidity(val percentage: Double)","entity.environment.Humidity"]},{"name":"data class Luminosity(val value: Double, val unit: LightUnit = LightUnit.LUX)","description":"entity.environment.Luminosity","location":"building-management-microservice/entity.environment/-luminosity/index.html","searchKeys":["Luminosity","data class Luminosity(val value: Double, val unit: LightUnit = LightUnit.LUX)","entity.environment.Luminosity"]},{"name":"data class MedicalTechnology(val id: MedicalTechnologyID, val name: String, val description: String, val type: MedicalTechnologyType, val isInUse: Boolean = false, val roomId: RoomID? = null)","description":"entity.medicaltechnology.MedicalTechnology","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/index.html","searchKeys":["MedicalTechnology","data class MedicalTechnology(val id: MedicalTechnologyID, val name: String, val description: String, val type: MedicalTechnologyType, val isInUse: Boolean = false, val roomId: RoomID? = null)","entity.medicaltechnology.MedicalTechnology"]},{"name":"data class MedicalTechnologyID(val value: String)","description":"entity.medicaltechnology.MedicalTechnologyID","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-i-d/index.html","searchKeys":["MedicalTechnologyID","data class MedicalTechnologyID(val value: String)","entity.medicaltechnology.MedicalTechnologyID"]},{"name":"data class Presence(val presenceDetected: Boolean)","description":"entity.environment.Presence","location":"building-management-microservice/entity.environment/-presence/index.html","searchKeys":["Presence","data class Presence(val presenceDetected: Boolean)","entity.environment.Presence"]},{"name":"data class Room(val id: RoomID, val type: RoomType, val zoneId: ZoneID, val name: String? = null, val environmentalData: RoomEnvironmentalData = RoomEnvironmentalData())","description":"entity.zone.Room","location":"building-management-microservice/entity.zone/-room/index.html","searchKeys":["Room","data class Room(val id: RoomID, val type: RoomType, val zoneId: ZoneID, val name: String? = null, val environmentalData: RoomEnvironmentalData = RoomEnvironmentalData())","entity.zone.Room"]},{"name":"data class RoomApiDto(val id: String, val name: String, val zoneId: String, val type: RoomApiDtoType, val environmentalData: EnvironmentalDataApiDto = EnvironmentalDataApiDto())","description":"application.presenter.api.model.RoomApiDto","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/index.html","searchKeys":["RoomApiDto","data class RoomApiDto(val id: String, val name: String, val zoneId: String, val type: RoomApiDtoType, val environmentalData: EnvironmentalDataApiDto = EnvironmentalDataApiDto())","application.presenter.api.model.RoomApiDto"]},{"name":"data class RoomEnvironmentalData(val temperature: Temperature? = null, val humidity: Humidity? = null, val luminosity: Luminosity? = null, val presence: Presence? = null)","description":"entity.zone.RoomEnvironmentalData","location":"building-management-microservice/entity.zone/-room-environmental-data/index.html","searchKeys":["RoomEnvironmentalData","data class RoomEnvironmentalData(val temperature: Temperature? = null, val humidity: Humidity? = null, val luminosity: Luminosity? = null, val presence: Presence? = null)","entity.zone.RoomEnvironmentalData"]},{"name":"data class RoomID(val value: String)","description":"entity.zone.RoomID","location":"building-management-microservice/entity.zone/-room-i-d/index.html","searchKeys":["RoomID","data class RoomID(val value: String)","entity.zone.RoomID"]},{"name":"data class Temperature(val value: Double, val unit: TemperatureUnit = TemperatureUnit.CELSIUS)","description":"entity.environment.Temperature","location":"building-management-microservice/entity.environment/-temperature/index.html","searchKeys":["Temperature","data class Temperature(val value: Double, val unit: TemperatureUnit = TemperatureUnit.CELSIUS)","entity.environment.Temperature"]},{"name":"data class ValueWithUnit<T>(val value: T, val unit: String)","description":"application.presenter.api.model.ValueWithUnit","location":"building-management-microservice/application.presenter.api.model/-value-with-unit/index.html","searchKeys":["ValueWithUnit","data class ValueWithUnit<T>(val value: T, val unit: String)","application.presenter.api.model.ValueWithUnit"]},{"name":"data class Zone(val id: ZoneID, val name: String, val description: String)","description":"entity.zone.Zone","location":"building-management-microservice/entity.zone/-zone/index.html","searchKeys":["Zone","data class Zone(val id: ZoneID, val name: String, val description: String)","entity.zone.Zone"]},{"name":"data class ZoneID(val value: String)","description":"entity.zone.ZoneID","location":"building-management-microservice/entity.zone/-zone-i-d/index.html","searchKeys":["ZoneID","data class ZoneID(val value: String)","entity.zone.ZoneID"]},{"name":"enum LightUnit : Enum<LightUnit> ","description":"entity.environment.LightUnit","location":"building-management-microservice/entity.environment/-light-unit/index.html","searchKeys":["LightUnit","enum LightUnit : Enum<LightUnit> ","entity.environment.LightUnit"]},{"name":"enum MedicalTechnologyType : Enum<MedicalTechnologyType> ","description":"entity.medicaltechnology.MedicalTechnologyType","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-type/index.html","searchKeys":["MedicalTechnologyType","enum MedicalTechnologyType : Enum<MedicalTechnologyType> ","entity.medicaltechnology.MedicalTechnologyType"]},{"name":"enum RoomApiDtoType : Enum<RoomApiDtoType> ","description":"application.presenter.api.model.RoomApiDtoType","location":"building-management-microservice/application.presenter.api.model/-room-api-dto-type/index.html","searchKeys":["RoomApiDtoType","enum RoomApiDtoType : Enum<RoomApiDtoType> ","application.presenter.api.model.RoomApiDtoType"]},{"name":"enum RoomType : Enum<RoomType> ","description":"entity.zone.RoomType","location":"building-management-microservice/entity.zone/-room-type/index.html","searchKeys":["RoomType","enum RoomType : Enum<RoomType> ","entity.zone.RoomType"]},{"name":"enum TemperatureUnit : Enum<TemperatureUnit> ","description":"entity.environment.TemperatureUnit","location":"building-management-microservice/entity.environment/-temperature-unit/index.html","searchKeys":["TemperatureUnit","enum TemperatureUnit : Enum<TemperatureUnit> ","entity.environment.TemperatureUnit"]},{"name":"fun <T> ValueWithUnit(value: T, unit: String)","description":"application.presenter.api.model.ValueWithUnit.ValueWithUnit","location":"building-management-microservice/application.presenter.api.model/-value-with-unit/-value-with-unit.html","searchKeys":["ValueWithUnit","fun <T> ValueWithUnit(value: T, unit: String)","application.presenter.api.model.ValueWithUnit.ValueWithUnit"]},{"name":"fun APIController(provider: ManagerProvider)","description":"infrastructure.api.APIController.APIController","location":"building-management-microservice/infrastructure.api/-a-p-i-controller/-a-p-i-controller.html","searchKeys":["APIController","fun APIController(provider: ManagerProvider)","infrastructure.api.APIController.APIController"]},{"name":"fun BasicDigitalTwin.toRoom(): Room","description":"infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation.toRoom","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-room-adt-presentation/to-room.html","searchKeys":["toRoom","fun BasicDigitalTwin.toRoom(): Room","infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation.toRoom"]},{"name":"fun CreateRoom(room: Room, roomRepository: RoomRepository)","description":"application.service.Service.CreateRoom.CreateRoom","location":"building-management-microservice/application.service/-service/-create-room/-create-room.html","searchKeys":["CreateRoom","fun CreateRoom(room: Room, roomRepository: RoomRepository)","application.service.Service.CreateRoom.CreateRoom"]},{"name":"fun DeleteRoom(roomID: RoomID, roomRepository: RoomRepository)","description":"application.service.Service.DeleteRoom.DeleteRoom","location":"building-management-microservice/application.service/-service/-delete-room/-delete-room.html","searchKeys":["DeleteRoom","fun DeleteRoom(roomID: RoomID, roomRepository: RoomRepository)","application.service.Service.DeleteRoom.DeleteRoom"]},{"name":"fun DigitalTwinManager()","description":"infrastructure.digitaltwins.DigitalTwinManager.DigitalTwinManager","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/-digital-twin-manager.html","searchKeys":["DigitalTwinManager","fun DigitalTwinManager()","infrastructure.digitaltwins.DigitalTwinManager.DigitalTwinManager"]},{"name":"fun EnvironmentalDataApiDto(temperature: ValueWithUnit<Double>? = null, humidity: Double? = null, luminosity: ValueWithUnit<Double>? = null, presence: Boolean? = null)","description":"application.presenter.api.model.EnvironmentalDataApiDto.EnvironmentalDataApiDto","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/-environmental-data-api-dto.html","searchKeys":["EnvironmentalDataApiDto","fun EnvironmentalDataApiDto(temperature: ValueWithUnit<Double>? = null, humidity: Double? = null, luminosity: ValueWithUnit<Double>? = null, presence: Boolean? = null)","application.presenter.api.model.EnvironmentalDataApiDto.EnvironmentalDataApiDto"]},{"name":"fun GetRoom(roomID: RoomID, roomRepository: RoomRepository, dateTime: Date? = null)","description":"application.service.Service.GetRoom.GetRoom","location":"building-management-microservice/application.service/-service/-get-room/-get-room.html","searchKeys":["GetRoom","fun GetRoom(roomID: RoomID, roomRepository: RoomRepository, dateTime: Date? = null)","application.service.Service.GetRoom.GetRoom"]},{"name":"fun Humidity(percentage: Double)","description":"entity.environment.Humidity.Humidity","location":"building-management-microservice/entity.environment/-humidity/-humidity.html","searchKeys":["Humidity","fun Humidity(percentage: Double)","entity.environment.Humidity.Humidity"]},{"name":"fun Luminosity(value: Double, unit: LightUnit = LightUnit.LUX)","description":"entity.environment.Luminosity.Luminosity","location":"building-management-microservice/entity.environment/-luminosity/-luminosity.html","searchKeys":["Luminosity","fun Luminosity(value: Double, unit: LightUnit = LightUnit.LUX)","entity.environment.Luminosity.Luminosity"]},{"name":"fun ManagerProviderImpl()","description":"infrastructure.provider.ManagerProviderImpl.ManagerProviderImpl","location":"building-management-microservice/infrastructure.provider/-manager-provider-impl/-manager-provider-impl.html","searchKeys":["ManagerProviderImpl","fun ManagerProviderImpl()","infrastructure.provider.ManagerProviderImpl.ManagerProviderImpl"]},{"name":"fun MedicalTechnology(id: MedicalTechnologyID, name: String, description: String, type: MedicalTechnologyType, isInUse: Boolean = false, roomId: RoomID? = null)","description":"entity.medicaltechnology.MedicalTechnology.MedicalTechnology","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/-medical-technology.html","searchKeys":["MedicalTechnology","fun MedicalTechnology(id: MedicalTechnologyID, name: String, description: String, type: MedicalTechnologyType, isInUse: Boolean = false, roomId: RoomID? = null)","entity.medicaltechnology.MedicalTechnology.MedicalTechnology"]},{"name":"fun MedicalTechnologyID(value: String)","description":"entity.medicaltechnology.MedicalTechnologyID.MedicalTechnologyID","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-i-d/-medical-technology-i-d.html","searchKeys":["MedicalTechnologyID","fun MedicalTechnologyID(value: String)","entity.medicaltechnology.MedicalTechnologyID.MedicalTechnologyID"]},{"name":"fun Presence(presenceDetected: Boolean)","description":"entity.environment.Presence.Presence","location":"building-management-microservice/entity.environment/-presence/-presence.html","searchKeys":["Presence","fun Presence(presenceDetected: Boolean)","entity.environment.Presence.Presence"]},{"name":"fun Room(id: RoomID, type: RoomType, zoneId: ZoneID, name: String? = null, environmentalData: RoomEnvironmentalData = RoomEnvironmentalData())","description":"entity.zone.Room.Room","location":"building-management-microservice/entity.zone/-room/-room.html","searchKeys":["Room","fun Room(id: RoomID, type: RoomType, zoneId: ZoneID, name: String? = null, environmentalData: RoomEnvironmentalData = RoomEnvironmentalData())","entity.zone.Room.Room"]},{"name":"fun Room.toDigitalTwin(): BasicDigitalTwin","description":"infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation.toDigitalTwin","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-room-adt-presentation/to-digital-twin.html","searchKeys":["toDigitalTwin","fun Room.toDigitalTwin(): BasicDigitalTwin","infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation.toDigitalTwin"]},{"name":"fun Room.toRoomApiDto(): RoomApiDto","description":"application.presenter.api.serializer.ApiSerializer.toRoomApiDto","location":"building-management-microservice/application.presenter.api.serializer/-api-serializer/to-room-api-dto.html","searchKeys":["toRoomApiDto","fun Room.toRoomApiDto(): RoomApiDto","application.presenter.api.serializer.ApiSerializer.toRoomApiDto"]},{"name":"fun RoomApiDto(id: String, name: String, zoneId: String, type: RoomApiDtoType, environmentalData: EnvironmentalDataApiDto = EnvironmentalDataApiDto())","description":"application.presenter.api.model.RoomApiDto.RoomApiDto","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/-room-api-dto.html","searchKeys":["RoomApiDto","fun RoomApiDto(id: String, name: String, zoneId: String, type: RoomApiDtoType, environmentalData: EnvironmentalDataApiDto = EnvironmentalDataApiDto())","application.presenter.api.model.RoomApiDto.RoomApiDto"]},{"name":"fun RoomApiDto.toRoom(): Room","description":"application.presenter.api.deserializer.ApiDeserializer.toRoom","location":"building-management-microservice/application.presenter.api.deserializer/-api-deserializer/to-room.html","searchKeys":["toRoom","fun RoomApiDto.toRoom(): Room","application.presenter.api.deserializer.ApiDeserializer.toRoom"]},{"name":"fun RoomController(roomDtManager: RoomDigitalTwinManager)","description":"application.controller.RoomController.RoomController","location":"building-management-microservice/application.controller/-room-controller/-room-controller.html","searchKeys":["RoomController","fun RoomController(roomDtManager: RoomDigitalTwinManager)","application.controller.RoomController.RoomController"]},{"name":"fun RoomEnvironmentalData(temperature: Temperature? = null, humidity: Humidity? = null, luminosity: Luminosity? = null, presence: Presence? = null)","description":"entity.zone.RoomEnvironmentalData.RoomEnvironmentalData","location":"building-management-microservice/entity.zone/-room-environmental-data/-room-environmental-data.html","searchKeys":["RoomEnvironmentalData","fun RoomEnvironmentalData(temperature: Temperature? = null, humidity: Humidity? = null, luminosity: Luminosity? = null, presence: Presence? = null)","entity.zone.RoomEnvironmentalData.RoomEnvironmentalData"]},{"name":"fun RoomID(value: String)","description":"entity.zone.RoomID.RoomID","location":"building-management-microservice/entity.zone/-room-i-d/-room-i-d.html","searchKeys":["RoomID","fun RoomID(value: String)","entity.zone.RoomID.RoomID"]},{"name":"fun Temperature(value: Double, unit: TemperatureUnit = TemperatureUnit.CELSIUS)","description":"entity.environment.Temperature.Temperature","location":"building-management-microservice/entity.environment/-temperature/-temperature.html","searchKeys":["Temperature","fun Temperature(value: Double, unit: TemperatureUnit = TemperatureUnit.CELSIUS)","entity.environment.Temperature.Temperature"]},{"name":"fun Zone(id: ZoneID, name: String, description: String)","description":"entity.zone.Zone.Zone","location":"building-management-microservice/entity.zone/-zone/-zone.html","searchKeys":["Zone","fun Zone(id: ZoneID, name: String, description: String)","entity.zone.Zone.Zone"]},{"name":"fun ZoneID(value: String)","description":"entity.zone.ZoneID.ZoneID","location":"building-management-microservice/entity.zone/-zone-i-d/-zone-i-d.html","searchKeys":["ZoneID","fun ZoneID(value: String)","entity.zone.ZoneID.ZoneID"]},{"name":"fun dispatcher(app: Application)","description":"infrastructure.api.APIController.dispatcher","location":"building-management-microservice/infrastructure.api/-a-p-i-controller/dispatcher.html","searchKeys":["dispatcher","fun dispatcher(app: Application)","infrastructure.api.APIController.dispatcher"]},{"name":"fun main()","description":".main","location":"building-management-microservice/[root]/main.html","searchKeys":["main","fun main()",".main"]},{"name":"fun start()","description":"infrastructure.api.APIController.start","location":"building-management-microservice/infrastructure.api/-a-p-i-controller/start.html","searchKeys":["start","fun start()","infrastructure.api.APIController.start"]},{"name":"fun valueOf(value: String): LightUnit","description":"entity.environment.LightUnit.valueOf","location":"building-management-microservice/entity.environment/-light-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LightUnit","entity.environment.LightUnit.valueOf"]},{"name":"fun valueOf(value: String): MedicalTechnologyType","description":"entity.medicaltechnology.MedicalTechnologyType.valueOf","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MedicalTechnologyType","entity.medicaltechnology.MedicalTechnologyType.valueOf"]},{"name":"fun valueOf(value: String): RoomApiDtoType","description":"application.presenter.api.model.RoomApiDtoType.valueOf","location":"building-management-microservice/application.presenter.api.model/-room-api-dto-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RoomApiDtoType","application.presenter.api.model.RoomApiDtoType.valueOf"]},{"name":"fun valueOf(value: String): RoomType","description":"entity.zone.RoomType.valueOf","location":"building-management-microservice/entity.zone/-room-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RoomType","entity.zone.RoomType.valueOf"]},{"name":"fun valueOf(value: String): TemperatureUnit","description":"entity.environment.TemperatureUnit.valueOf","location":"building-management-microservice/entity.environment/-temperature-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TemperatureUnit","entity.environment.TemperatureUnit.valueOf"]},{"name":"fun values(): Array<LightUnit>","description":"entity.environment.LightUnit.values","location":"building-management-microservice/entity.environment/-light-unit/values.html","searchKeys":["values","fun values(): Array<LightUnit>","entity.environment.LightUnit.values"]},{"name":"fun values(): Array<MedicalTechnologyType>","description":"entity.medicaltechnology.MedicalTechnologyType.values","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-type/values.html","searchKeys":["values","fun values(): Array<MedicalTechnologyType>","entity.medicaltechnology.MedicalTechnologyType.values"]},{"name":"fun values(): Array<RoomApiDtoType>","description":"application.presenter.api.model.RoomApiDtoType.values","location":"building-management-microservice/application.presenter.api.model/-room-api-dto-type/values.html","searchKeys":["values","fun values(): Array<RoomApiDtoType>","application.presenter.api.model.RoomApiDtoType.values"]},{"name":"fun values(): Array<RoomType>","description":"entity.zone.RoomType.values","location":"building-management-microservice/entity.zone/-room-type/values.html","searchKeys":["values","fun values(): Array<RoomType>","entity.zone.RoomType.values"]},{"name":"fun values(): Array<TemperatureUnit>","description":"entity.environment.TemperatureUnit.values","location":"building-management-microservice/entity.environment/-temperature-unit/values.html","searchKeys":["values","fun values(): Array<TemperatureUnit>","entity.environment.TemperatureUnit.values"]},{"name":"interface ApplicationService<out T>","description":"application.service.Service.ApplicationService","location":"building-management-microservice/application.service/-service/-application-service/index.html","searchKeys":["ApplicationService","interface ApplicationService<out T>","application.service.Service.ApplicationService"]},{"name":"interface ManagerProvider","description":"infrastructure.provider.ManagerProvider","location":"building-management-microservice/infrastructure.provider/-manager-provider/index.html","searchKeys":["ManagerProvider","interface ManagerProvider","infrastructure.provider.ManagerProvider"]},{"name":"interface MedicalTechnologyRepository","description":"usecase.repository.MedicalTechnologyRepository","location":"building-management-microservice/usecase.repository/-medical-technology-repository/index.html","searchKeys":["MedicalTechnologyRepository","interface MedicalTechnologyRepository","usecase.repository.MedicalTechnologyRepository"]},{"name":"interface RoomDigitalTwinManager","description":"application.controller.manager.RoomDigitalTwinManager","location":"building-management-microservice/application.controller.manager/-room-digital-twin-manager/index.html","searchKeys":["RoomDigitalTwinManager","interface RoomDigitalTwinManager","application.controller.manager.RoomDigitalTwinManager"]},{"name":"interface RoomRepository","description":"usecase.repository.RoomRepository","location":"building-management-microservice/usecase.repository/-room-repository/index.html","searchKeys":["RoomRepository","interface RoomRepository","usecase.repository.RoomRepository"]},{"name":"interface UseCase<out X>","description":"usecase.UseCase","location":"building-management-microservice/usecase/-use-case/index.html","searchKeys":["UseCase","interface UseCase<out X>","usecase.UseCase"]},{"name":"object ApiDeserializer","description":"application.presenter.api.deserializer.ApiDeserializer","location":"building-management-microservice/application.presenter.api.deserializer/-api-deserializer/index.html","searchKeys":["ApiDeserializer","object ApiDeserializer","application.presenter.api.deserializer.ApiDeserializer"]},{"name":"object ApiSerializer","description":"application.presenter.api.serializer.ApiSerializer","location":"building-management-microservice/application.presenter.api.serializer/-api-serializer/index.html","searchKeys":["ApiSerializer","object ApiSerializer","application.presenter.api.serializer.ApiSerializer"]},{"name":"object Companion","description":"infrastructure.api.APIController.Companion","location":"building-management-microservice/infrastructure.api/-a-p-i-controller/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.api.APIController.Companion"]},{"name":"object Companion","description":"infrastructure.digitaltwins.DigitalTwinManager.Companion","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.digitaltwins.DigitalTwinManager.Companion"]},{"name":"object RoomAdtPresentation","description":"infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-room-adt-presentation/index.html","searchKeys":["RoomAdtPresentation","object RoomAdtPresentation","infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation"]},{"name":"object Service","description":"application.service.Service","location":"building-management-microservice/application.service/-service/index.html","searchKeys":["Service","object Service","application.service.Service"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.medicaltechnology.MedicalTechnology.equals","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.medicaltechnology.MedicalTechnology.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.zone.Room.equals","location":"building-management-microservice/entity.zone/-room/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.zone.Room.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.zone.Zone.equals","location":"building-management-microservice/entity.zone/-zone/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.zone.Zone.equals"]},{"name":"open override fun createRoom(room: Room): Room?","description":"application.controller.RoomController.createRoom","location":"building-management-microservice/application.controller/-room-controller/create-room.html","searchKeys":["createRoom","open override fun createRoom(room: Room): Room?","application.controller.RoomController.createRoom"]},{"name":"open override fun createRoomDigitalTwin(room: Room): Boolean","description":"infrastructure.digitaltwins.DigitalTwinManager.createRoomDigitalTwin","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/create-room-digital-twin.html","searchKeys":["createRoomDigitalTwin","open override fun createRoomDigitalTwin(room: Room): Boolean","infrastructure.digitaltwins.DigitalTwinManager.createRoomDigitalTwin"]},{"name":"open override fun deleteRoom(roomId: RoomID): Boolean","description":"application.controller.RoomController.deleteRoom","location":"building-management-microservice/application.controller/-room-controller/delete-room.html","searchKeys":["deleteRoom","open override fun deleteRoom(roomId: RoomID): Boolean","application.controller.RoomController.deleteRoom"]},{"name":"open override fun deleteRoomDigitalTwin(roomId: RoomID): Boolean","description":"infrastructure.digitaltwins.DigitalTwinManager.deleteRoomDigitalTwin","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/delete-room-digital-twin.html","searchKeys":["deleteRoomDigitalTwin","open override fun deleteRoomDigitalTwin(roomId: RoomID): Boolean","infrastructure.digitaltwins.DigitalTwinManager.deleteRoomDigitalTwin"]},{"name":"open override fun execute(): Boolean","description":"application.service.Service.DeleteRoom.execute","location":"building-management-microservice/application.service/-service/-delete-room/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.Service.DeleteRoom.execute"]},{"name":"open override fun execute(): Room?","description":"application.service.Service.CreateRoom.execute","location":"building-management-microservice/application.service/-service/-create-room/execute.html","searchKeys":["execute","open override fun execute(): Room?","application.service.Service.CreateRoom.execute"]},{"name":"open override fun execute(): Room?","description":"application.service.Service.GetRoom.execute","location":"building-management-microservice/application.service/-service/-get-room/execute.html","searchKeys":["execute","open override fun execute(): Room?","application.service.Service.GetRoom.execute"]},{"name":"open override fun findBy(roomId: RoomID): Room?","description":"infrastructure.digitaltwins.DigitalTwinManager.findBy","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/find-by.html","searchKeys":["findBy","open override fun findBy(roomId: RoomID): Room?","infrastructure.digitaltwins.DigitalTwinManager.findBy"]},{"name":"open override fun findBy(roomId: RoomID, dateTime: Date?): Room?","description":"application.controller.RoomController.findBy","location":"building-management-microservice/application.controller/-room-controller/find-by.html","searchKeys":["findBy","open override fun findBy(roomId: RoomID, dateTime: Date?): Room?","application.controller.RoomController.findBy"]},{"name":"open override fun getRooms(): Set<Room>","description":"application.controller.RoomController.getRooms","location":"building-management-microservice/application.controller/-room-controller/get-rooms.html","searchKeys":["getRooms","open override fun getRooms(): Set<Room>","application.controller.RoomController.getRooms"]},{"name":"open override fun hashCode(): Int","description":"entity.medicaltechnology.MedicalTechnology.hashCode","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.medicaltechnology.MedicalTechnology.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.zone.Room.hashCode","location":"building-management-microservice/entity.zone/-room/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.zone.Room.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.zone.Zone.hashCode","location":"building-management-microservice/entity.zone/-zone/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.zone.Zone.hashCode"]},{"name":"open override val roomDigitalTwinManager: DigitalTwinManager","description":"infrastructure.provider.ManagerProviderImpl.roomDigitalTwinManager","location":"building-management-microservice/infrastructure.provider/-manager-provider-impl/room-digital-twin-manager.html","searchKeys":["roomDigitalTwinManager","open override val roomDigitalTwinManager: DigitalTwinManager","infrastructure.provider.ManagerProviderImpl.roomDigitalTwinManager"]},{"name":"val description: String","description":"entity.medicaltechnology.MedicalTechnology.description","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/description.html","searchKeys":["description","val description: String","entity.medicaltechnology.MedicalTechnology.description"]},{"name":"val description: String","description":"entity.zone.Zone.description","location":"building-management-microservice/entity.zone/-zone/description.html","searchKeys":["description","val description: String","entity.zone.Zone.description"]},{"name":"val environmentalData: EnvironmentalDataApiDto","description":"application.presenter.api.model.RoomApiDto.environmentalData","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/environmental-data.html","searchKeys":["environmentalData","val environmentalData: EnvironmentalDataApiDto","application.presenter.api.model.RoomApiDto.environmentalData"]},{"name":"val environmentalData: RoomEnvironmentalData","description":"entity.zone.Room.environmentalData","location":"building-management-microservice/entity.zone/-room/environmental-data.html","searchKeys":["environmentalData","val environmentalData: RoomEnvironmentalData","entity.zone.Room.environmentalData"]},{"name":"val humidity: Double? = null","description":"application.presenter.api.model.EnvironmentalDataApiDto.humidity","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/humidity.html","searchKeys":["humidity","val humidity: Double? = null","application.presenter.api.model.EnvironmentalDataApiDto.humidity"]},{"name":"val humidity: Humidity? = null","description":"entity.zone.RoomEnvironmentalData.humidity","location":"building-management-microservice/entity.zone/-room-environmental-data/humidity.html","searchKeys":["humidity","val humidity: Humidity? = null","entity.zone.RoomEnvironmentalData.humidity"]},{"name":"val id: MedicalTechnologyID","description":"entity.medicaltechnology.MedicalTechnology.id","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/id.html","searchKeys":["id","val id: MedicalTechnologyID","entity.medicaltechnology.MedicalTechnology.id"]},{"name":"val id: RoomID","description":"entity.zone.Room.id","location":"building-management-microservice/entity.zone/-room/id.html","searchKeys":["id","val id: RoomID","entity.zone.Room.id"]},{"name":"val id: String","description":"application.presenter.api.model.RoomApiDto.id","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/id.html","searchKeys":["id","val id: String","application.presenter.api.model.RoomApiDto.id"]},{"name":"val id: ZoneID","description":"entity.zone.Zone.id","location":"building-management-microservice/entity.zone/-zone/id.html","searchKeys":["id","val id: ZoneID","entity.zone.Zone.id"]},{"name":"val isInUse: Boolean = false","description":"entity.medicaltechnology.MedicalTechnology.isInUse","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/is-in-use.html","searchKeys":["isInUse","val isInUse: Boolean = false","entity.medicaltechnology.MedicalTechnology.isInUse"]},{"name":"val luminosity: Luminosity? = null","description":"entity.zone.RoomEnvironmentalData.luminosity","location":"building-management-microservice/entity.zone/-room-environmental-data/luminosity.html","searchKeys":["luminosity","val luminosity: Luminosity? = null","entity.zone.RoomEnvironmentalData.luminosity"]},{"name":"val luminosity: ValueWithUnit<Double>? = null","description":"application.presenter.api.model.EnvironmentalDataApiDto.luminosity","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/luminosity.html","searchKeys":["luminosity","val luminosity: ValueWithUnit<Double>? = null","application.presenter.api.model.EnvironmentalDataApiDto.luminosity"]},{"name":"val name: String","description":"application.presenter.api.model.RoomApiDto.name","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/name.html","searchKeys":["name","val name: String","application.presenter.api.model.RoomApiDto.name"]},{"name":"val name: String","description":"entity.medicaltechnology.MedicalTechnology.name","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/name.html","searchKeys":["name","val name: String","entity.medicaltechnology.MedicalTechnology.name"]},{"name":"val name: String","description":"entity.zone.Zone.name","location":"building-management-microservice/entity.zone/-zone/name.html","searchKeys":["name","val name: String","entity.zone.Zone.name"]},{"name":"val name: String? = null","description":"entity.zone.Room.name","location":"building-management-microservice/entity.zone/-room/name.html","searchKeys":["name","val name: String? = null","entity.zone.Room.name"]},{"name":"val percentage: Double","description":"entity.environment.Humidity.percentage","location":"building-management-microservice/entity.environment/-humidity/percentage.html","searchKeys":["percentage","val percentage: Double","entity.environment.Humidity.percentage"]},{"name":"val presence: Boolean? = null","description":"application.presenter.api.model.EnvironmentalDataApiDto.presence","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/presence.html","searchKeys":["presence","val presence: Boolean? = null","application.presenter.api.model.EnvironmentalDataApiDto.presence"]},{"name":"val presence: Presence? = null","description":"entity.zone.RoomEnvironmentalData.presence","location":"building-management-microservice/entity.zone/-room-environmental-data/presence.html","searchKeys":["presence","val presence: Presence? = null","entity.zone.RoomEnvironmentalData.presence"]},{"name":"val presenceDetected: Boolean","description":"entity.environment.Presence.presenceDetected","location":"building-management-microservice/entity.environment/-presence/presence-detected.html","searchKeys":["presenceDetected","val presenceDetected: Boolean","entity.environment.Presence.presenceDetected"]},{"name":"val roomId: RoomID? = null","description":"entity.medicaltechnology.MedicalTechnology.roomId","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/room-id.html","searchKeys":["roomId","val roomId: RoomID? = null","entity.medicaltechnology.MedicalTechnology.roomId"]},{"name":"val temperature: Temperature? = null","description":"entity.zone.RoomEnvironmentalData.temperature","location":"building-management-microservice/entity.zone/-room-environmental-data/temperature.html","searchKeys":["temperature","val temperature: Temperature? = null","entity.zone.RoomEnvironmentalData.temperature"]},{"name":"val temperature: ValueWithUnit<Double>? = null","description":"application.presenter.api.model.EnvironmentalDataApiDto.temperature","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/temperature.html","searchKeys":["temperature","val temperature: ValueWithUnit<Double>? = null","application.presenter.api.model.EnvironmentalDataApiDto.temperature"]},{"name":"val type: MedicalTechnologyType","description":"entity.medicaltechnology.MedicalTechnology.type","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/type.html","searchKeys":["type","val type: MedicalTechnologyType","entity.medicaltechnology.MedicalTechnology.type"]},{"name":"val type: RoomApiDtoType","description":"application.presenter.api.model.RoomApiDto.type","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/type.html","searchKeys":["type","val type: RoomApiDtoType","application.presenter.api.model.RoomApiDto.type"]},{"name":"val type: RoomType","description":"entity.zone.Room.type","location":"building-management-microservice/entity.zone/-room/type.html","searchKeys":["type","val type: RoomType","entity.zone.Room.type"]},{"name":"val unit: LightUnit","description":"entity.environment.Luminosity.unit","location":"building-management-microservice/entity.environment/-luminosity/unit.html","searchKeys":["unit","val unit: LightUnit","entity.environment.Luminosity.unit"]},{"name":"val unit: String","description":"application.presenter.api.model.ValueWithUnit.unit","location":"building-management-microservice/application.presenter.api.model/-value-with-unit/unit.html","searchKeys":["unit","val unit: String","application.presenter.api.model.ValueWithUnit.unit"]},{"name":"val unit: TemperatureUnit","description":"entity.environment.Temperature.unit","location":"building-management-microservice/entity.environment/-temperature/unit.html","searchKeys":["unit","val unit: TemperatureUnit","entity.environment.Temperature.unit"]},{"name":"val value: Double","description":"entity.environment.Luminosity.value","location":"building-management-microservice/entity.environment/-luminosity/value.html","searchKeys":["value","val value: Double","entity.environment.Luminosity.value"]},{"name":"val value: Double","description":"entity.environment.Temperature.value","location":"building-management-microservice/entity.environment/-temperature/value.html","searchKeys":["value","val value: Double","entity.environment.Temperature.value"]},{"name":"val value: String","description":"entity.medicaltechnology.MedicalTechnologyID.value","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-i-d/value.html","searchKeys":["value","val value: String","entity.medicaltechnology.MedicalTechnologyID.value"]},{"name":"val value: String","description":"entity.zone.RoomID.value","location":"building-management-microservice/entity.zone/-room-i-d/value.html","searchKeys":["value","val value: String","entity.zone.RoomID.value"]},{"name":"val value: String","description":"entity.zone.ZoneID.value","location":"building-management-microservice/entity.zone/-zone-i-d/value.html","searchKeys":["value","val value: String","entity.zone.ZoneID.value"]},{"name":"val value: T","description":"application.presenter.api.model.ValueWithUnit.value","location":"building-management-microservice/application.presenter.api.model/-value-with-unit/value.html","searchKeys":["value","val value: T","application.presenter.api.model.ValueWithUnit.value"]},{"name":"val zoneId: String","description":"application.presenter.api.model.RoomApiDto.zoneId","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/zone-id.html","searchKeys":["zoneId","val zoneId: String","application.presenter.api.model.RoomApiDto.zoneId"]},{"name":"val zoneId: ZoneID","description":"entity.zone.Room.zoneId","location":"building-management-microservice/entity.zone/-room/zone-id.html","searchKeys":["zoneId","val zoneId: ZoneID","entity.zone.Room.zoneId"]}]
