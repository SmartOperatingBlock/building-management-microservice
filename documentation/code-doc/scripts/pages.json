[{"name":"CELSIUS","description":"application.presenter.event.model.RoomEventPayloads.TemperaturePayloadUnit.CELSIUS","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-temperature-payload-unit/-c-e-l-s-i-u-s/index.html","searchKeys":["CELSIUS","CELSIUS","application.presenter.event.model.RoomEventPayloads.TemperaturePayloadUnit.CELSIUS"]},{"name":"CELSIUS","description":"entity.environment.TemperatureUnit.CELSIUS","location":"building-management-microservice/entity.environment/-temperature-unit/-c-e-l-s-i-u-s/index.html","searchKeys":["CELSIUS","CELSIUS","entity.environment.TemperatureUnit.CELSIUS"]},{"name":"ENDOSCOPE","description":"application.presenter.api.model.MedicalTechnologyApiDtoType.ENDOSCOPE","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto-type/-e-n-d-o-s-c-o-p-e/index.html","searchKeys":["ENDOSCOPE","ENDOSCOPE","application.presenter.api.model.MedicalTechnologyApiDtoType.ENDOSCOPE"]},{"name":"ENDOSCOPE","description":"entity.medicaltechnology.MedicalTechnologyType.ENDOSCOPE","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-type/-e-n-d-o-s-c-o-p-e/index.html","searchKeys":["ENDOSCOPE","ENDOSCOPE","entity.medicaltechnology.MedicalTechnologyType.ENDOSCOPE"]},{"name":"HUMIDITY","description":"application.presenter.database.model.TimeSeriesDataType.HUMIDITY","location":"building-management-microservice/application.presenter.database.model/-time-series-data-type/-h-u-m-i-d-i-t-y/index.html","searchKeys":["HUMIDITY","HUMIDITY","application.presenter.database.model.TimeSeriesDataType.HUMIDITY"]},{"name":"LUMINOSITY","description":"application.presenter.database.model.TimeSeriesDataType.LUMINOSITY","location":"building-management-microservice/application.presenter.database.model/-time-series-data-type/-l-u-m-i-n-o-s-i-t-y/index.html","searchKeys":["LUMINOSITY","LUMINOSITY","application.presenter.database.model.TimeSeriesDataType.LUMINOSITY"]},{"name":"LUX","description":"application.presenter.event.model.RoomEventPayloads.LuminosityPayloadUnit.LUX","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-luminosity-payload-unit/-l-u-x/index.html","searchKeys":["LUX","LUX","application.presenter.event.model.RoomEventPayloads.LuminosityPayloadUnit.LUX"]},{"name":"LUX","description":"entity.environment.LightUnit.LUX","location":"building-management-microservice/entity.environment/-light-unit/-l-u-x/index.html","searchKeys":["LUX","LUX","entity.environment.LightUnit.LUX"]},{"name":"OPERATING_ROOM","description":"application.presenter.api.model.RoomApiDtoType.OPERATING_ROOM","location":"building-management-microservice/application.presenter.api.model/-room-api-dto-type/-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["OPERATING_ROOM","OPERATING_ROOM","application.presenter.api.model.RoomApiDtoType.OPERATING_ROOM"]},{"name":"OPERATING_ROOM","description":"entity.zone.RoomType.OPERATING_ROOM","location":"building-management-microservice/entity.zone/-room-type/-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["OPERATING_ROOM","OPERATING_ROOM","entity.zone.RoomType.OPERATING_ROOM"]},{"name":"PRESENCE","description":"application.presenter.database.model.TimeSeriesDataType.PRESENCE","location":"building-management-microservice/application.presenter.database.model/-time-series-data-type/-p-r-e-s-e-n-c-e/index.html","searchKeys":["PRESENCE","PRESENCE","application.presenter.database.model.TimeSeriesDataType.PRESENCE"]},{"name":"PRE_OPERATING_ROOM","description":"application.presenter.api.model.RoomApiDtoType.PRE_OPERATING_ROOM","location":"building-management-microservice/application.presenter.api.model/-room-api-dto-type/-p-r-e_-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["PRE_OPERATING_ROOM","PRE_OPERATING_ROOM","application.presenter.api.model.RoomApiDtoType.PRE_OPERATING_ROOM"]},{"name":"PRE_OPERATING_ROOM","description":"entity.zone.RoomType.PRE_OPERATING_ROOM","location":"building-management-microservice/entity.zone/-room-type/-p-r-e_-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["PRE_OPERATING_ROOM","PRE_OPERATING_ROOM","entity.zone.RoomType.PRE_OPERATING_ROOM"]},{"name":"TEMPERATURE","description":"application.presenter.database.model.TimeSeriesDataType.TEMPERATURE","location":"building-management-microservice/application.presenter.database.model/-time-series-data-type/-t-e-m-p-e-r-a-t-u-r-e/index.html","searchKeys":["TEMPERATURE","TEMPERATURE","application.presenter.database.model.TimeSeriesDataType.TEMPERATURE"]},{"name":"XRAY","description":"application.presenter.api.model.MedicalTechnologyApiDtoType.XRAY","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto-type/-x-r-a-y/index.html","searchKeys":["XRAY","XRAY","application.presenter.api.model.MedicalTechnologyApiDtoType.XRAY"]},{"name":"XRAY","description":"entity.medicaltechnology.MedicalTechnologyType.XRAY","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-type/-x-r-a-y/index.html","searchKeys":["XRAY","XRAY","entity.medicaltechnology.MedicalTechnologyType.XRAY"]},{"name":"abstract fun canHandle(event: Event<*>): Boolean","description":"application.handler.EventHandler.canHandle","location":"building-management-microservice/application.handler/-event-handler/can-handle.html","searchKeys":["canHandle","abstract fun canHandle(event: Event<*>): Boolean","application.handler.EventHandler.canHandle"]},{"name":"abstract fun consume(event: Event<*>)","description":"application.handler.EventHandler.consume","location":"building-management-microservice/application.handler/-event-handler/consume.html","searchKeys":["consume","abstract fun consume(event: Event<*>)","application.handler.EventHandler.consume"]},{"name":"abstract fun createMedicalTechnology(medicalTechnology: MedicalTechnology): MedicalTechnology?","description":"usecase.repository.MedicalTechnologyRepository.createMedicalTechnology","location":"building-management-microservice/usecase.repository/-medical-technology-repository/create-medical-technology.html","searchKeys":["createMedicalTechnology","abstract fun createMedicalTechnology(medicalTechnology: MedicalTechnology): MedicalTechnology?","usecase.repository.MedicalTechnologyRepository.createMedicalTechnology"]},{"name":"abstract fun createMedicalTechnologyDigitalTwin(medicalTechnology: MedicalTechnology): Boolean","description":"application.controller.manager.MedicalTechnologyDigitalTwinManager.createMedicalTechnologyDigitalTwin","location":"building-management-microservice/application.controller.manager/-medical-technology-digital-twin-manager/create-medical-technology-digital-twin.html","searchKeys":["createMedicalTechnologyDigitalTwin","abstract fun createMedicalTechnologyDigitalTwin(medicalTechnology: MedicalTechnology): Boolean","application.controller.manager.MedicalTechnologyDigitalTwinManager.createMedicalTechnologyDigitalTwin"]},{"name":"abstract fun createRoom(room: Room): Room?","description":"usecase.repository.RoomRepository.createRoom","location":"building-management-microservice/usecase.repository/-room-repository/create-room.html","searchKeys":["createRoom","abstract fun createRoom(room: Room): Room?","usecase.repository.RoomRepository.createRoom"]},{"name":"abstract fun createRoomDigitalTwin(room: Room): Boolean","description":"application.controller.manager.RoomDigitalTwinManager.createRoomDigitalTwin","location":"building-management-microservice/application.controller.manager/-room-digital-twin-manager/create-room-digital-twin.html","searchKeys":["createRoomDigitalTwin","abstract fun createRoomDigitalTwin(room: Room): Boolean","application.controller.manager.RoomDigitalTwinManager.createRoomDigitalTwin"]},{"name":"abstract fun deleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID): Boolean","description":"application.controller.manager.MedicalTechnologyDatabaseManager.deleteMedicalTechnology","location":"building-management-microservice/application.controller.manager/-medical-technology-database-manager/delete-medical-technology.html","searchKeys":["deleteMedicalTechnology","abstract fun deleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID): Boolean","application.controller.manager.MedicalTechnologyDatabaseManager.deleteMedicalTechnology"]},{"name":"abstract fun deleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID): Boolean","description":"usecase.repository.MedicalTechnologyRepository.deleteMedicalTechnology","location":"building-management-microservice/usecase.repository/-medical-technology-repository/delete-medical-technology.html","searchKeys":["deleteMedicalTechnology","abstract fun deleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID): Boolean","usecase.repository.MedicalTechnologyRepository.deleteMedicalTechnology"]},{"name":"abstract fun deleteMedicalTechnologyDigitalTwin(medicalTechnologyId: MedicalTechnologyID): Boolean","description":"application.controller.manager.MedicalTechnologyDigitalTwinManager.deleteMedicalTechnologyDigitalTwin","location":"building-management-microservice/application.controller.manager/-medical-technology-digital-twin-manager/delete-medical-technology-digital-twin.html","searchKeys":["deleteMedicalTechnologyDigitalTwin","abstract fun deleteMedicalTechnologyDigitalTwin(medicalTechnologyId: MedicalTechnologyID): Boolean","application.controller.manager.MedicalTechnologyDigitalTwinManager.deleteMedicalTechnologyDigitalTwin"]},{"name":"abstract fun deleteRoom(roomId: RoomID): Boolean","description":"application.controller.manager.RoomDatabaseManager.deleteRoom","location":"building-management-microservice/application.controller.manager/-room-database-manager/delete-room.html","searchKeys":["deleteRoom","abstract fun deleteRoom(roomId: RoomID): Boolean","application.controller.manager.RoomDatabaseManager.deleteRoom"]},{"name":"abstract fun deleteRoom(roomId: RoomID): Boolean","description":"usecase.repository.RoomRepository.deleteRoom","location":"building-management-microservice/usecase.repository/-room-repository/delete-room.html","searchKeys":["deleteRoom","abstract fun deleteRoom(roomId: RoomID): Boolean","usecase.repository.RoomRepository.deleteRoom"]},{"name":"abstract fun deleteRoomDigitalTwin(roomId: RoomID): Boolean","description":"application.controller.manager.RoomDigitalTwinManager.deleteRoomDigitalTwin","location":"building-management-microservice/application.controller.manager/-room-digital-twin-manager/delete-room-digital-twin.html","searchKeys":["deleteRoomDigitalTwin","abstract fun deleteRoomDigitalTwin(roomId: RoomID): Boolean","application.controller.manager.RoomDigitalTwinManager.deleteRoomDigitalTwin"]},{"name":"abstract fun execute(): T","description":"application.service.ApplicationService.execute","location":"building-management-microservice/application.service/-application-service/execute.html","searchKeys":["execute","abstract fun execute(): T","application.service.ApplicationService.execute"]},{"name":"abstract fun execute(): X","description":"usecase.UseCase.execute","location":"building-management-microservice/usecase/-use-case/execute.html","searchKeys":["execute","abstract fun execute(): X","usecase.UseCase.execute"]},{"name":"abstract fun findBy(medicalTechnologyId: MedicalTechnologyID): MedicalTechnology?","description":"application.controller.manager.MedicalTechnologyDigitalTwinManager.findBy","location":"building-management-microservice/application.controller.manager/-medical-technology-digital-twin-manager/find-by.html","searchKeys":["findBy","abstract fun findBy(medicalTechnologyId: MedicalTechnologyID): MedicalTechnology?","application.controller.manager.MedicalTechnologyDigitalTwinManager.findBy"]},{"name":"abstract fun findBy(medicalTechnologyId: MedicalTechnologyID, dateTime: Instant): MedicalTechnology?","description":"application.controller.manager.MedicalTechnologyDatabaseManager.findBy","location":"building-management-microservice/application.controller.manager/-medical-technology-database-manager/find-by.html","searchKeys":["findBy","abstract fun findBy(medicalTechnologyId: MedicalTechnologyID, dateTime: Instant): MedicalTechnology?","application.controller.manager.MedicalTechnologyDatabaseManager.findBy"]},{"name":"abstract fun findBy(medicalTechnologyId: MedicalTechnologyID, dateTime: Instant?): MedicalTechnology?","description":"usecase.repository.MedicalTechnologyRepository.findBy","location":"building-management-microservice/usecase.repository/-medical-technology-repository/find-by.html","searchKeys":["findBy","abstract fun findBy(medicalTechnologyId: MedicalTechnologyID, dateTime: Instant?): MedicalTechnology?","usecase.repository.MedicalTechnologyRepository.findBy"]},{"name":"abstract fun findBy(roomId: RoomID): Room?","description":"application.controller.manager.RoomDigitalTwinManager.findBy","location":"building-management-microservice/application.controller.manager/-room-digital-twin-manager/find-by.html","searchKeys":["findBy","abstract fun findBy(roomId: RoomID): Room?","application.controller.manager.RoomDigitalTwinManager.findBy"]},{"name":"abstract fun findBy(roomId: RoomID, dateTime: Instant): Room?","description":"application.controller.manager.RoomDatabaseManager.findBy","location":"building-management-microservice/application.controller.manager/-room-database-manager/find-by.html","searchKeys":["findBy","abstract fun findBy(roomId: RoomID, dateTime: Instant): Room?","application.controller.manager.RoomDatabaseManager.findBy"]},{"name":"abstract fun findBy(roomId: RoomID, dateTime: Instant?): Room?","description":"usecase.repository.RoomRepository.findBy","location":"building-management-microservice/usecase.repository/-room-repository/find-by.html","searchKeys":["findBy","abstract fun findBy(roomId: RoomID, dateTime: Instant?): Room?","usecase.repository.RoomRepository.findBy"]},{"name":"abstract fun getAllRooms(): Set<Room>","description":"application.controller.manager.RoomDatabaseManager.getAllRooms","location":"building-management-microservice/application.controller.manager/-room-database-manager/get-all-rooms.html","searchKeys":["getAllRooms","abstract fun getAllRooms(): Set<Room>","application.controller.manager.RoomDatabaseManager.getAllRooms"]},{"name":"abstract fun getRooms(): Set<Room>","description":"usecase.repository.RoomRepository.getRooms","location":"building-management-microservice/usecase.repository/-room-repository/get-rooms.html","searchKeys":["getRooms","abstract fun getRooms(): Set<Room>","usecase.repository.RoomRepository.getRooms"]},{"name":"abstract fun mapTechnologyTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","description":"usecase.repository.MedicalTechnologyRepository.mapTechnologyTo","location":"building-management-microservice/usecase.repository/-medical-technology-repository/map-technology-to.html","searchKeys":["mapTechnologyTo","abstract fun mapTechnologyTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","usecase.repository.MedicalTechnologyRepository.mapTechnologyTo"]},{"name":"abstract fun mapTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","description":"application.controller.manager.MedicalTechnologyDatabaseManager.mapTo","location":"building-management-microservice/application.controller.manager/-medical-technology-database-manager/map-to.html","searchKeys":["mapTo","abstract fun mapTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","application.controller.manager.MedicalTechnologyDatabaseManager.mapTo"]},{"name":"abstract fun mapTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","description":"application.controller.manager.MedicalTechnologyDigitalTwinManager.mapTo","location":"building-management-microservice/application.controller.manager/-medical-technology-digital-twin-manager/map-to.html","searchKeys":["mapTo","abstract fun mapTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","application.controller.manager.MedicalTechnologyDigitalTwinManager.mapTo"]},{"name":"abstract fun saveMedicalTechnology(medicalTechnology: MedicalTechnology): Boolean","description":"application.controller.manager.MedicalTechnologyDatabaseManager.saveMedicalTechnology","location":"building-management-microservice/application.controller.manager/-medical-technology-database-manager/save-medical-technology.html","searchKeys":["saveMedicalTechnology","abstract fun saveMedicalTechnology(medicalTechnology: MedicalTechnology): Boolean","application.controller.manager.MedicalTechnologyDatabaseManager.saveMedicalTechnology"]},{"name":"abstract fun saveRoom(room: Room): Boolean","description":"application.controller.manager.RoomDatabaseManager.saveRoom","location":"building-management-microservice/application.controller.manager/-room-database-manager/save-room.html","searchKeys":["saveRoom","abstract fun saveRoom(room: Room): Boolean","application.controller.manager.RoomDatabaseManager.saveRoom"]},{"name":"abstract fun updateMedicalTechnologyUsage(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, roomId: RoomID, dateTime: Instant): Boolean","description":"application.controller.manager.MedicalTechnologyDatabaseManager.updateMedicalTechnologyUsage","location":"building-management-microservice/application.controller.manager/-medical-technology-database-manager/update-medical-technology-usage.html","searchKeys":["updateMedicalTechnologyUsage","abstract fun updateMedicalTechnologyUsage(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, roomId: RoomID, dateTime: Instant): Boolean","application.controller.manager.MedicalTechnologyDatabaseManager.updateMedicalTechnologyUsage"]},{"name":"abstract fun updateMedicalTechnologyUsage(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, roomId: RoomID, dateTime: Instant): Boolean","description":"usecase.repository.MedicalTechnologyRepository.updateMedicalTechnologyUsage","location":"building-management-microservice/usecase.repository/-medical-technology-repository/update-medical-technology-usage.html","searchKeys":["updateMedicalTechnologyUsage","abstract fun updateMedicalTechnologyUsage(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, roomId: RoomID, dateTime: Instant): Boolean","usecase.repository.MedicalTechnologyRepository.updateMedicalTechnologyUsage"]},{"name":"abstract fun updateRoomEnvironmentalData(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant): Boolean","description":"application.controller.manager.RoomDatabaseManager.updateRoomEnvironmentalData","location":"building-management-microservice/application.controller.manager/-room-database-manager/update-room-environmental-data.html","searchKeys":["updateRoomEnvironmentalData","abstract fun updateRoomEnvironmentalData(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant): Boolean","application.controller.manager.RoomDatabaseManager.updateRoomEnvironmentalData"]},{"name":"abstract fun updateRoomEnvironmentalData(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant): Boolean","description":"usecase.repository.RoomRepository.updateRoomEnvironmentalData","location":"building-management-microservice/usecase.repository/-room-repository/update-room-environmental-data.html","searchKeys":["updateRoomEnvironmentalData","abstract fun updateRoomEnvironmentalData(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant): Boolean","usecase.repository.RoomRepository.updateRoomEnvironmentalData"]},{"name":"abstract val data: E","description":"application.presenter.event.model.Event.data","location":"building-management-microservice/application.presenter.event.model/-event/data.html","searchKeys":["data","abstract val data: E","application.presenter.event.model.Event.data"]},{"name":"abstract val dateTime: String","description":"application.presenter.event.model.Event.dateTime","location":"building-management-microservice/application.presenter.event.model/-event/date-time.html","searchKeys":["dateTime","abstract val dateTime: String","application.presenter.event.model.Event.dateTime"]},{"name":"abstract val key: String","description":"application.presenter.event.model.Event.key","location":"building-management-microservice/application.presenter.event.model/-event/key.html","searchKeys":["key","abstract val key: String","application.presenter.event.model.Event.key"]},{"name":"abstract val medicalTechnologyDatabaseManager: MedicalTechnologyDatabaseManager","description":"infrastructure.provider.ManagerProvider.medicalTechnologyDatabaseManager","location":"building-management-microservice/infrastructure.provider/-manager-provider/medical-technology-database-manager.html","searchKeys":["medicalTechnologyDatabaseManager","abstract val medicalTechnologyDatabaseManager: MedicalTechnologyDatabaseManager","infrastructure.provider.ManagerProvider.medicalTechnologyDatabaseManager"]},{"name":"abstract val medicalTechnologyDigitalTwinManager: MedicalTechnologyDigitalTwinManager","description":"infrastructure.provider.ManagerProvider.medicalTechnologyDigitalTwinManager","location":"building-management-microservice/infrastructure.provider/-manager-provider/medical-technology-digital-twin-manager.html","searchKeys":["medicalTechnologyDigitalTwinManager","abstract val medicalTechnologyDigitalTwinManager: MedicalTechnologyDigitalTwinManager","infrastructure.provider.ManagerProvider.medicalTechnologyDigitalTwinManager"]},{"name":"abstract val roomDatabaseManager: RoomDatabaseManager","description":"infrastructure.provider.ManagerProvider.roomDatabaseManager","location":"building-management-microservice/infrastructure.provider/-manager-provider/room-database-manager.html","searchKeys":["roomDatabaseManager","abstract val roomDatabaseManager: RoomDatabaseManager","infrastructure.provider.ManagerProvider.roomDatabaseManager"]},{"name":"abstract val roomDigitalTwinManager: RoomDigitalTwinManager","description":"infrastructure.provider.ManagerProvider.roomDigitalTwinManager","location":"building-management-microservice/infrastructure.provider/-manager-provider/room-digital-twin-manager.html","searchKeys":["roomDigitalTwinManager","abstract val roomDigitalTwinManager: RoomDigitalTwinManager","infrastructure.provider.ManagerProvider.roomDigitalTwinManager"]},{"name":"class APIController(provider: ManagerProvider)","description":"infrastructure.api.APIController","location":"building-management-microservice/infrastructure.api/-a-p-i-controller/index.html","searchKeys":["APIController","class APIController(provider: ManagerProvider)","infrastructure.api.APIController"]},{"name":"class AdtQuery","description":"infrastructure.digitaltwins.query.AdtQuery","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/index.html","searchKeys":["AdtQuery","class AdtQuery","infrastructure.digitaltwins.query.AdtQuery"]},{"name":"class CreateMedicalTechnology(medicalTechnology: MedicalTechnology, medicalTechnologyRepository: MedicalTechnologyRepository) : ApplicationService<MedicalTechnology?> ","description":"application.service.MedicalTechnologyService.CreateMedicalTechnology","location":"building-management-microservice/application.service/-medical-technology-service/-create-medical-technology/index.html","searchKeys":["CreateMedicalTechnology","class CreateMedicalTechnology(medicalTechnology: MedicalTechnology, medicalTechnologyRepository: MedicalTechnologyRepository) : ApplicationService<MedicalTechnology?> ","application.service.MedicalTechnologyService.CreateMedicalTechnology"]},{"name":"class CreateRoom(room: Room, roomRepository: RoomRepository) : ApplicationService<Room?> ","description":"application.service.RoomService.CreateRoom","location":"building-management-microservice/application.service/-room-service/-create-room/index.html","searchKeys":["CreateRoom","class CreateRoom(room: Room, roomRepository: RoomRepository) : ApplicationService<Room?> ","application.service.RoomService.CreateRoom"]},{"name":"class DatabaseManager(customConnectionString: String? = null) : RoomDatabaseManager, MedicalTechnologyDatabaseManager","description":"infrastructure.database.DatabaseManager","location":"building-management-microservice/infrastructure.database/-database-manager/index.html","searchKeys":["DatabaseManager","class DatabaseManager(customConnectionString: String? = null) : RoomDatabaseManager, MedicalTechnologyDatabaseManager","infrastructure.database.DatabaseManager"]},{"name":"class DeleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID, medicalTechnologyRepository: MedicalTechnologyRepository) : ApplicationService<Boolean> ","description":"application.service.MedicalTechnologyService.DeleteMedicalTechnology","location":"building-management-microservice/application.service/-medical-technology-service/-delete-medical-technology/index.html","searchKeys":["DeleteMedicalTechnology","class DeleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID, medicalTechnologyRepository: MedicalTechnologyRepository) : ApplicationService<Boolean> ","application.service.MedicalTechnologyService.DeleteMedicalTechnology"]},{"name":"class DeleteRoom(roomID: RoomID, roomRepository: RoomRepository) : ApplicationService<Boolean> ","description":"application.service.RoomService.DeleteRoom","location":"building-management-microservice/application.service/-room-service/-delete-room/index.html","searchKeys":["DeleteRoom","class DeleteRoom(roomID: RoomID, roomRepository: RoomRepository) : ApplicationService<Boolean> ","application.service.RoomService.DeleteRoom"]},{"name":"class DigitalTwinManager : RoomDigitalTwinManager, MedicalTechnologyDigitalTwinManager","description":"infrastructure.digitaltwins.DigitalTwinManager","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/index.html","searchKeys":["DigitalTwinManager","class DigitalTwinManager : RoomDigitalTwinManager, MedicalTechnologyDigitalTwinManager","infrastructure.digitaltwins.DigitalTwinManager"]},{"name":"class GetAllRoomEntry(roomRepository: RoomRepository) : ApplicationService<Set<RoomEntry>> ","description":"application.service.RoomService.GetAllRoomEntry","location":"building-management-microservice/application.service/-room-service/-get-all-room-entry/index.html","searchKeys":["GetAllRoomEntry","class GetAllRoomEntry(roomRepository: RoomRepository) : ApplicationService<Set<RoomEntry>> ","application.service.RoomService.GetAllRoomEntry"]},{"name":"class GetMedicalTechnology(medicalTechnologyId: MedicalTechnologyID, medicalTechnologyRepository: MedicalTechnologyRepository, dateTime: Instant? = null) : ApplicationService<MedicalTechnology?> ","description":"application.service.MedicalTechnologyService.GetMedicalTechnology","location":"building-management-microservice/application.service/-medical-technology-service/-get-medical-technology/index.html","searchKeys":["GetMedicalTechnology","class GetMedicalTechnology(medicalTechnologyId: MedicalTechnologyID, medicalTechnologyRepository: MedicalTechnologyRepository, dateTime: Instant? = null) : ApplicationService<MedicalTechnology?> ","application.service.MedicalTechnologyService.GetMedicalTechnology"]},{"name":"class GetRoom(roomID: RoomID, roomRepository: RoomRepository, dateTime: Instant? = null) : ApplicationService<Room?> ","description":"application.service.RoomService.GetRoom","location":"building-management-microservice/application.service/-room-service/-get-room/index.html","searchKeys":["GetRoom","class GetRoom(roomID: RoomID, roomRepository: RoomRepository, dateTime: Instant? = null) : ApplicationService<Room?> ","application.service.RoomService.GetRoom"]},{"name":"class HumidityEventHandler(roomRepository: RoomRepository) : EventHandler","description":"application.handler.EventHandlers.HumidityEventHandler","location":"building-management-microservice/application.handler/-event-handlers/-humidity-event-handler/index.html","searchKeys":["HumidityEventHandler","class HumidityEventHandler(roomRepository: RoomRepository) : EventHandler","application.handler.EventHandlers.HumidityEventHandler"]},{"name":"class KafkaClient(provider: ManagerProvider)","description":"infrastructure.events.KafkaClient","location":"building-management-microservice/infrastructure.events/-kafka-client/index.html","searchKeys":["KafkaClient","class KafkaClient(provider: ManagerProvider)","infrastructure.events.KafkaClient"]},{"name":"class LuminosityEventHandler(roomRepository: RoomRepository) : EventHandler","description":"application.handler.EventHandlers.LuminosityEventHandler","location":"building-management-microservice/application.handler/-event-handlers/-luminosity-event-handler/index.html","searchKeys":["LuminosityEventHandler","class LuminosityEventHandler(roomRepository: RoomRepository) : EventHandler","application.handler.EventHandlers.LuminosityEventHandler"]},{"name":"class ManagerProviderImpl : ManagerProvider","description":"infrastructure.provider.ManagerProviderImpl","location":"building-management-microservice/infrastructure.provider/-manager-provider-impl/index.html","searchKeys":["ManagerProviderImpl","class ManagerProviderImpl : ManagerProvider","infrastructure.provider.ManagerProviderImpl"]},{"name":"class MapMedicalTechnologyToRoom(medicalTechnologyId: MedicalTechnologyID, roomID: RoomID?, roomRepository: RoomRepository, medicalTechnologyRepository: MedicalTechnologyRepository) : ApplicationService<Boolean> ","description":"application.service.MedicalTechnologyService.MapMedicalTechnologyToRoom","location":"building-management-microservice/application.service/-medical-technology-service/-map-medical-technology-to-room/index.html","searchKeys":["MapMedicalTechnologyToRoom","class MapMedicalTechnologyToRoom(medicalTechnologyId: MedicalTechnologyID, roomID: RoomID?, roomRepository: RoomRepository, medicalTechnologyRepository: MedicalTechnologyRepository) : ApplicationService<Boolean> ","application.service.MedicalTechnologyService.MapMedicalTechnologyToRoom"]},{"name":"class MedicalTechnologyController(digitalTwinManager: MedicalTechnologyDigitalTwinManager, databaseManager: MedicalTechnologyDatabaseManager) : MedicalTechnologyRepository","description":"application.controller.MedicalTechnologyController","location":"building-management-microservice/application.controller/-medical-technology-controller/index.html","searchKeys":["MedicalTechnologyController","class MedicalTechnologyController(digitalTwinManager: MedicalTechnologyDigitalTwinManager, databaseManager: MedicalTechnologyDatabaseManager) : MedicalTechnologyRepository","application.controller.MedicalTechnologyController"]},{"name":"class MedicalTechnologyEventHandler(medicalTechnologyRepository: MedicalTechnologyRepository) : EventHandler","description":"application.handler.EventHandlers.MedicalTechnologyEventHandler","location":"building-management-microservice/application.handler/-event-handlers/-medical-technology-event-handler/index.html","searchKeys":["MedicalTechnologyEventHandler","class MedicalTechnologyEventHandler(medicalTechnologyRepository: MedicalTechnologyRepository) : EventHandler","application.handler.EventHandlers.MedicalTechnologyEventHandler"]},{"name":"class PresenceEventHandler(roomRepository: RoomRepository) : EventHandler","description":"application.handler.EventHandlers.PresenceEventHandler","location":"building-management-microservice/application.handler/-event-handlers/-presence-event-handler/index.html","searchKeys":["PresenceEventHandler","class PresenceEventHandler(roomRepository: RoomRepository) : EventHandler","application.handler.EventHandlers.PresenceEventHandler"]},{"name":"class RoomController(roomDtManager: RoomDigitalTwinManager, roomDatabaseManager: RoomDatabaseManager) : RoomRepository","description":"application.controller.RoomController","location":"building-management-microservice/application.controller/-room-controller/index.html","searchKeys":["RoomController","class RoomController(roomDtManager: RoomDigitalTwinManager, roomDatabaseManager: RoomDatabaseManager) : RoomRepository","application.controller.RoomController"]},{"name":"class TemperatureEventHandler(roomRepository: RoomRepository) : EventHandler","description":"application.handler.EventHandlers.TemperatureEventHandler","location":"building-management-microservice/application.handler/-event-handlers/-temperature-event-handler/index.html","searchKeys":["TemperatureEventHandler","class TemperatureEventHandler(roomRepository: RoomRepository) : EventHandler","application.handler.EventHandlers.TemperatureEventHandler"]},{"name":"class UpdateMedicalTechnologyUsage(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, dateTime: Instant, medicalTechnologyRepository: MedicalTechnologyRepository) : ApplicationService<Boolean> ","description":"application.service.MedicalTechnologyService.UpdateMedicalTechnologyUsage","location":"building-management-microservice/application.service/-medical-technology-service/-update-medical-technology-usage/index.html","searchKeys":["UpdateMedicalTechnologyUsage","class UpdateMedicalTechnologyUsage(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, dateTime: Instant, medicalTechnologyRepository: MedicalTechnologyRepository) : ApplicationService<Boolean> ","application.service.MedicalTechnologyService.UpdateMedicalTechnologyUsage"]},{"name":"class UpdateRoomEnvironmentData(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant, roomRepository: RoomRepository) : ApplicationService<Boolean> ","description":"application.service.RoomService.UpdateRoomEnvironmentData","location":"building-management-microservice/application.service/-room-service/-update-room-environment-data/index.html","searchKeys":["UpdateRoomEnvironmentData","class UpdateRoomEnvironmentData(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant, roomRepository: RoomRepository) : ApplicationService<Boolean> ","application.service.RoomService.UpdateRoomEnvironmentData"]},{"name":"const val HUMIDITY_EVENT: String","description":"application.presenter.event.model.RoomEventKey.HUMIDITY_EVENT","location":"building-management-microservice/application.presenter.event.model/-room-event-key/-h-u-m-i-d-i-t-y_-e-v-e-n-t.html","searchKeys":["HUMIDITY_EVENT","const val HUMIDITY_EVENT: String","application.presenter.event.model.RoomEventKey.HUMIDITY_EVENT"]},{"name":"const val IS_LOCATED_IN_OPERATING_ROOM_RELATIONSHIP: String","description":"infrastructure.digitaltwins.adtpresentation.MedicalTechnologyAdtPresentation.IS_LOCATED_IN_OPERATING_ROOM_RELATIONSHIP","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-medical-technology-adt-presentation/-i-s_-l-o-c-a-t-e-d_-i-n_-o-p-e-r-a-t-i-n-g_-r-o-o-m_-r-e-l-a-t-i-o-n-s-h-i-p.html","searchKeys":["IS_LOCATED_IN_OPERATING_ROOM_RELATIONSHIP","const val IS_LOCATED_IN_OPERATING_ROOM_RELATIONSHIP: String","infrastructure.digitaltwins.adtpresentation.MedicalTechnologyAdtPresentation.IS_LOCATED_IN_OPERATING_ROOM_RELATIONSHIP"]},{"name":"const val LUMINOSITY_EVENT: String","description":"application.presenter.event.model.RoomEventKey.LUMINOSITY_EVENT","location":"building-management-microservice/application.presenter.event.model/-room-event-key/-l-u-m-i-n-o-s-i-t-y_-e-v-e-n-t.html","searchKeys":["LUMINOSITY_EVENT","const val LUMINOSITY_EVENT: String","application.presenter.event.model.RoomEventKey.LUMINOSITY_EVENT"]},{"name":"const val PRESENCE_EVENT: String","description":"application.presenter.event.model.RoomEventKey.PRESENCE_EVENT","location":"building-management-microservice/application.presenter.event.model/-room-event-key/-p-r-e-s-e-n-c-e_-e-v-e-n-t.html","searchKeys":["PRESENCE_EVENT","const val PRESENCE_EVENT: String","application.presenter.event.model.RoomEventKey.PRESENCE_EVENT"]},{"name":"const val TEMPERATURE_EVENT: String","description":"application.presenter.event.model.RoomEventKey.TEMPERATURE_EVENT","location":"building-management-microservice/application.presenter.event.model/-room-event-key/-t-e-m-p-e-r-a-t-u-r-e_-e-v-e-n-t.html","searchKeys":["TEMPERATURE_EVENT","const val TEMPERATURE_EVENT: String","application.presenter.event.model.RoomEventKey.TEMPERATURE_EVENT"]},{"name":"const val USAGE_EVENT: String","description":"application.presenter.event.model.MedicalTechnologyEventKey.USAGE_EVENT","location":"building-management-microservice/application.presenter.event.model/-medical-technology-event-key/-u-s-a-g-e_-e-v-e-n-t.html","searchKeys":["USAGE_EVENT","const val USAGE_EVENT: String","application.presenter.event.model.MedicalTechnologyEventKey.USAGE_EVENT"]},{"name":"constructor()","description":"infrastructure.digitaltwins.DigitalTwinManager.DigitalTwinManager","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/-digital-twin-manager.html","searchKeys":["DigitalTwinManager","constructor()","infrastructure.digitaltwins.DigitalTwinManager.DigitalTwinManager"]},{"name":"constructor()","description":"infrastructure.provider.ManagerProviderImpl.ManagerProviderImpl","location":"building-management-microservice/infrastructure.provider/-manager-provider-impl/-manager-provider-impl.html","searchKeys":["ManagerProviderImpl","constructor()","infrastructure.provider.ManagerProviderImpl.ManagerProviderImpl"]},{"name":"constructor(customConnectionString: String? = null)","description":"infrastructure.database.DatabaseManager.DatabaseManager","location":"building-management-microservice/infrastructure.database/-database-manager/-database-manager.html","searchKeys":["DatabaseManager","constructor(customConnectionString: String? = null)","infrastructure.database.DatabaseManager.DatabaseManager"]},{"name":"constructor(dateTime: Instant, metadata: TimeSeriesMedicalTechnologyMetadata, value: Boolean)","description":"application.presenter.database.model.TimeSeriesMedicalTechnologyUsage.TimeSeriesMedicalTechnologyUsage","location":"building-management-microservice/application.presenter.database.model/-time-series-medical-technology-usage/-time-series-medical-technology-usage.html","searchKeys":["TimeSeriesMedicalTechnologyUsage","constructor(dateTime: Instant, metadata: TimeSeriesMedicalTechnologyMetadata, value: Boolean)","application.presenter.database.model.TimeSeriesMedicalTechnologyUsage.TimeSeriesMedicalTechnologyUsage"]},{"name":"constructor(dateTime: Instant, metadata: TimeSeriesRoomMetadata, value: Double)","description":"application.presenter.database.model.TimeSeriesRoomEnvironmentalData.TimeSeriesRoomEnvironmentalData","location":"building-management-microservice/application.presenter.database.model/-time-series-room-environmental-data/-time-series-room-environmental-data.html","searchKeys":["TimeSeriesRoomEnvironmentalData","constructor(dateTime: Instant, metadata: TimeSeriesRoomMetadata, value: Double)","application.presenter.database.model.TimeSeriesRoomEnvironmentalData.TimeSeriesRoomEnvironmentalData"]},{"name":"constructor(digitalTwinManager: MedicalTechnologyDigitalTwinManager, databaseManager: MedicalTechnologyDatabaseManager)","description":"application.controller.MedicalTechnologyController.MedicalTechnologyController","location":"building-management-microservice/application.controller/-medical-technology-controller/-medical-technology-controller.html","searchKeys":["MedicalTechnologyController","constructor(digitalTwinManager: MedicalTechnologyDigitalTwinManager, databaseManager: MedicalTechnologyDatabaseManager)","application.controller.MedicalTechnologyController.MedicalTechnologyController"]},{"name":"constructor(entries: List<T>, total: Int = entries.count())","description":"infrastructure.api.util.ApiResponses.ResponseEntryList.ResponseEntryList","location":"building-management-microservice/infrastructure.api.util/-api-responses/-response-entry-list/-response-entry-list.html","searchKeys":["ResponseEntryList","constructor(entries: List<T>, total: Int = entries.count())","infrastructure.api.util.ApiResponses.ResponseEntryList.ResponseEntryList"]},{"name":"constructor(entry: T, url: String)","description":"infrastructure.api.util.ApiResponses.ResponseEntry.ResponseEntry","location":"building-management-microservice/infrastructure.api.util/-api-responses/-response-entry/-response-entry.html","searchKeys":["ResponseEntry","constructor(entry: T, url: String)","infrastructure.api.util.ApiResponses.ResponseEntry.ResponseEntry"]},{"name":"constructor(humidityPercentage: Int)","description":"application.presenter.event.model.RoomEventPayloads.HumidityPayload.HumidityPayload","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-humidity-payload/-humidity-payload.html","searchKeys":["HumidityPayload","constructor(humidityPercentage: Int)","application.presenter.event.model.RoomEventPayloads.HumidityPayload.HumidityPayload"]},{"name":"constructor(id: MedicalTechnologyID, name: String, description: String, type: MedicalTechnologyType, isInUse: Boolean = false, roomId: RoomID? = null)","description":"entity.medicaltechnology.MedicalTechnology.MedicalTechnology","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/-medical-technology.html","searchKeys":["MedicalTechnology","constructor(id: MedicalTechnologyID, name: String, description: String, type: MedicalTechnologyType, isInUse: Boolean = false, roomId: RoomID? = null)","entity.medicaltechnology.MedicalTechnology.MedicalTechnology"]},{"name":"constructor(id: RoomID, type: RoomType, zoneId: ZoneID, name: String? = null, environmentalData: RoomEnvironmentalData = RoomEnvironmentalData())","description":"entity.zone.Room.Room","location":"building-management-microservice/entity.zone/-room/-room.html","searchKeys":["Room","constructor(id: RoomID, type: RoomType, zoneId: ZoneID, name: String? = null, environmentalData: RoomEnvironmentalData = RoomEnvironmentalData())","entity.zone.Room.Room"]},{"name":"constructor(id: String, name: String, description: String, type: MedicalTechnologyApiDtoType)","description":"application.presenter.api.model.MedicalTechnologyEntry.MedicalTechnologyEntry","location":"building-management-microservice/application.presenter.api.model/-medical-technology-entry/-medical-technology-entry.html","searchKeys":["MedicalTechnologyEntry","constructor(id: String, name: String, description: String, type: MedicalTechnologyApiDtoType)","application.presenter.api.model.MedicalTechnologyEntry.MedicalTechnologyEntry"]},{"name":"constructor(id: String, name: String, description: String, type: MedicalTechnologyApiDtoType, inUse: Boolean = false, roomId: String? = null)","description":"application.presenter.api.model.MedicalTechnologyApiDto.MedicalTechnologyApiDto","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto/-medical-technology-api-dto.html","searchKeys":["MedicalTechnologyApiDto","constructor(id: String, name: String, description: String, type: MedicalTechnologyApiDtoType, inUse: Boolean = false, roomId: String? = null)","application.presenter.api.model.MedicalTechnologyApiDto.MedicalTechnologyApiDto"]},{"name":"constructor(id: String, name: String, zoneId: String, type: RoomApiDtoType)","description":"application.presenter.api.model.RoomEntry.RoomEntry","location":"building-management-microservice/application.presenter.api.model/-room-entry/-room-entry.html","searchKeys":["RoomEntry","constructor(id: String, name: String, zoneId: String, type: RoomApiDtoType)","application.presenter.api.model.RoomEntry.RoomEntry"]},{"name":"constructor(id: String, name: String, zoneId: String, type: RoomApiDtoType, environmentalData: EnvironmentalDataApiDto = EnvironmentalDataApiDto())","description":"application.presenter.api.model.RoomApiDto.RoomApiDto","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/-room-api-dto.html","searchKeys":["RoomApiDto","constructor(id: String, name: String, zoneId: String, type: RoomApiDtoType, environmentalData: EnvironmentalDataApiDto = EnvironmentalDataApiDto())","application.presenter.api.model.RoomApiDto.RoomApiDto"]},{"name":"constructor(id: ZoneID, name: String, description: String)","description":"entity.zone.Zone.Zone","location":"building-management-microservice/entity.zone/-zone/-zone.html","searchKeys":["Zone","constructor(id: ZoneID, name: String, description: String)","entity.zone.Zone.Zone"]},{"name":"constructor(key: String, data: MedicalTechnologyUsagePayload, dateTime: String)","description":"application.presenter.event.model.MedicalTechnologyEvent.MedicalTechnologyEvent","location":"building-management-microservice/application.presenter.event.model/-medical-technology-event/-medical-technology-event.html","searchKeys":["MedicalTechnologyEvent","constructor(key: String, data: MedicalTechnologyUsagePayload, dateTime: String)","application.presenter.event.model.MedicalTechnologyEvent.MedicalTechnologyEvent"]},{"name":"constructor(key: String, roomId: String, data: E, dateTime: String)","description":"application.presenter.event.model.RoomEvent.RoomEvent","location":"building-management-microservice/application.presenter.event.model/-room-event/-room-event.html","searchKeys":["RoomEvent","constructor(key: String, roomId: String, data: E, dateTime: String)","application.presenter.event.model.RoomEvent.RoomEvent"]},{"name":"constructor(luminosityValue: Double, luminosityUnit: RoomEventPayloads.LuminosityPayloadUnit)","description":"application.presenter.event.model.RoomEventPayloads.LuminosityPayload.LuminosityPayload","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-luminosity-payload/-luminosity-payload.html","searchKeys":["LuminosityPayload","constructor(luminosityValue: Double, luminosityUnit: RoomEventPayloads.LuminosityPayloadUnit)","application.presenter.event.model.RoomEventPayloads.LuminosityPayload.LuminosityPayload"]},{"name":"constructor(medicalTechnology: MedicalTechnology, medicalTechnologyRepository: MedicalTechnologyRepository)","description":"application.service.MedicalTechnologyService.CreateMedicalTechnology.CreateMedicalTechnology","location":"building-management-microservice/application.service/-medical-technology-service/-create-medical-technology/-create-medical-technology.html","searchKeys":["CreateMedicalTechnology","constructor(medicalTechnology: MedicalTechnology, medicalTechnologyRepository: MedicalTechnologyRepository)","application.service.MedicalTechnologyService.CreateMedicalTechnology.CreateMedicalTechnology"]},{"name":"constructor(medicalTechnologyID: String, inUse: Boolean)","description":"application.presenter.event.model.MedicalTechnologyUsagePayload.MedicalTechnologyUsagePayload","location":"building-management-microservice/application.presenter.event.model/-medical-technology-usage-payload/-medical-technology-usage-payload.html","searchKeys":["MedicalTechnologyUsagePayload","constructor(medicalTechnologyID: String, inUse: Boolean)","application.presenter.event.model.MedicalTechnologyUsagePayload.MedicalTechnologyUsagePayload"]},{"name":"constructor(medicalTechnologyId: MedicalTechnologyID, medicalTechnologyRepository: MedicalTechnologyRepository)","description":"application.service.MedicalTechnologyService.DeleteMedicalTechnology.DeleteMedicalTechnology","location":"building-management-microservice/application.service/-medical-technology-service/-delete-medical-technology/-delete-medical-technology.html","searchKeys":["DeleteMedicalTechnology","constructor(medicalTechnologyId: MedicalTechnologyID, medicalTechnologyRepository: MedicalTechnologyRepository)","application.service.MedicalTechnologyService.DeleteMedicalTechnology.DeleteMedicalTechnology"]},{"name":"constructor(medicalTechnologyId: MedicalTechnologyID, medicalTechnologyRepository: MedicalTechnologyRepository, dateTime: Instant? = null)","description":"application.service.MedicalTechnologyService.GetMedicalTechnology.GetMedicalTechnology","location":"building-management-microservice/application.service/-medical-technology-service/-get-medical-technology/-get-medical-technology.html","searchKeys":["GetMedicalTechnology","constructor(medicalTechnologyId: MedicalTechnologyID, medicalTechnologyRepository: MedicalTechnologyRepository, dateTime: Instant? = null)","application.service.MedicalTechnologyService.GetMedicalTechnology.GetMedicalTechnology"]},{"name":"constructor(medicalTechnologyId: MedicalTechnologyID, roomID: RoomID?, roomRepository: RoomRepository, medicalTechnologyRepository: MedicalTechnologyRepository)","description":"application.service.MedicalTechnologyService.MapMedicalTechnologyToRoom.MapMedicalTechnologyToRoom","location":"building-management-microservice/application.service/-medical-technology-service/-map-medical-technology-to-room/-map-medical-technology-to-room.html","searchKeys":["MapMedicalTechnologyToRoom","constructor(medicalTechnologyId: MedicalTechnologyID, roomID: RoomID?, roomRepository: RoomRepository, medicalTechnologyRepository: MedicalTechnologyRepository)","application.service.MedicalTechnologyService.MapMedicalTechnologyToRoom.MapMedicalTechnologyToRoom"]},{"name":"constructor(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID)","description":"application.presenter.database.model.TimeSeriesMedicalTechnologyMetadata.TimeSeriesMedicalTechnologyMetadata","location":"building-management-microservice/application.presenter.database.model/-time-series-medical-technology-metadata/-time-series-medical-technology-metadata.html","searchKeys":["TimeSeriesMedicalTechnologyMetadata","constructor(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID)","application.presenter.database.model.TimeSeriesMedicalTechnologyMetadata.TimeSeriesMedicalTechnologyMetadata"]},{"name":"constructor(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, dateTime: Instant, medicalTechnologyRepository: MedicalTechnologyRepository)","description":"application.service.MedicalTechnologyService.UpdateMedicalTechnologyUsage.UpdateMedicalTechnologyUsage","location":"building-management-microservice/application.service/-medical-technology-service/-update-medical-technology-usage/-update-medical-technology-usage.html","searchKeys":["UpdateMedicalTechnologyUsage","constructor(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, dateTime: Instant, medicalTechnologyRepository: MedicalTechnologyRepository)","application.service.MedicalTechnologyService.UpdateMedicalTechnologyUsage.UpdateMedicalTechnologyUsage"]},{"name":"constructor(medicalTechnologyRepository: MedicalTechnologyRepository)","description":"application.handler.EventHandlers.MedicalTechnologyEventHandler.MedicalTechnologyEventHandler","location":"building-management-microservice/application.handler/-event-handlers/-medical-technology-event-handler/-medical-technology-event-handler.html","searchKeys":["MedicalTechnologyEventHandler","constructor(medicalTechnologyRepository: MedicalTechnologyRepository)","application.handler.EventHandlers.MedicalTechnologyEventHandler.MedicalTechnologyEventHandler"]},{"name":"constructor(percentage: Double)","description":"entity.environment.Humidity.Humidity","location":"building-management-microservice/entity.environment/-humidity/-humidity.html","searchKeys":["Humidity","constructor(percentage: Double)","entity.environment.Humidity.Humidity"]},{"name":"constructor(presenceDetected: Boolean)","description":"application.presenter.event.model.RoomEventPayloads.PresencePayload.PresencePayload","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-presence-payload/-presence-payload.html","searchKeys":["PresencePayload","constructor(presenceDetected: Boolean)","application.presenter.event.model.RoomEventPayloads.PresencePayload.PresencePayload"]},{"name":"constructor(presenceDetected: Boolean)","description":"entity.environment.Presence.Presence","location":"building-management-microservice/entity.environment/-presence/-presence.html","searchKeys":["Presence","constructor(presenceDetected: Boolean)","entity.environment.Presence.Presence"]},{"name":"constructor(provider: ManagerProvider)","description":"infrastructure.api.APIController.APIController","location":"building-management-microservice/infrastructure.api/-a-p-i-controller/-a-p-i-controller.html","searchKeys":["APIController","constructor(provider: ManagerProvider)","infrastructure.api.APIController.APIController"]},{"name":"constructor(provider: ManagerProvider)","description":"infrastructure.events.KafkaClient.KafkaClient","location":"building-management-microservice/infrastructure.events/-kafka-client/-kafka-client.html","searchKeys":["KafkaClient","constructor(provider: ManagerProvider)","infrastructure.events.KafkaClient.KafkaClient"]},{"name":"constructor(room: Room, roomRepository: RoomRepository)","description":"application.service.RoomService.CreateRoom.CreateRoom","location":"building-management-microservice/application.service/-room-service/-create-room/-create-room.html","searchKeys":["CreateRoom","constructor(room: Room, roomRepository: RoomRepository)","application.service.RoomService.CreateRoom.CreateRoom"]},{"name":"constructor(roomDtManager: RoomDigitalTwinManager, roomDatabaseManager: RoomDatabaseManager)","description":"application.controller.RoomController.RoomController","location":"building-management-microservice/application.controller/-room-controller/-room-controller.html","searchKeys":["RoomController","constructor(roomDtManager: RoomDigitalTwinManager, roomDatabaseManager: RoomDatabaseManager)","application.controller.RoomController.RoomController"]},{"name":"constructor(roomID: RoomID, roomRepository: RoomRepository)","description":"application.service.RoomService.DeleteRoom.DeleteRoom","location":"building-management-microservice/application.service/-room-service/-delete-room/-delete-room.html","searchKeys":["DeleteRoom","constructor(roomID: RoomID, roomRepository: RoomRepository)","application.service.RoomService.DeleteRoom.DeleteRoom"]},{"name":"constructor(roomID: RoomID, roomRepository: RoomRepository, dateTime: Instant? = null)","description":"application.service.RoomService.GetRoom.GetRoom","location":"building-management-microservice/application.service/-room-service/-get-room/-get-room.html","searchKeys":["GetRoom","constructor(roomID: RoomID, roomRepository: RoomRepository, dateTime: Instant? = null)","application.service.RoomService.GetRoom.GetRoom"]},{"name":"constructor(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant, roomRepository: RoomRepository)","description":"application.service.RoomService.UpdateRoomEnvironmentData.UpdateRoomEnvironmentData","location":"building-management-microservice/application.service/-room-service/-update-room-environment-data/-update-room-environment-data.html","searchKeys":["UpdateRoomEnvironmentData","constructor(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant, roomRepository: RoomRepository)","application.service.RoomService.UpdateRoomEnvironmentData.UpdateRoomEnvironmentData"]},{"name":"constructor(roomId: RoomID, type: TimeSeriesDataType, unit: String? = null)","description":"application.presenter.database.model.TimeSeriesRoomMetadata.TimeSeriesRoomMetadata","location":"building-management-microservice/application.presenter.database.model/-time-series-room-metadata/-time-series-room-metadata.html","searchKeys":["TimeSeriesRoomMetadata","constructor(roomId: RoomID, type: TimeSeriesDataType, unit: String? = null)","application.presenter.database.model.TimeSeriesRoomMetadata.TimeSeriesRoomMetadata"]},{"name":"constructor(roomId: String?)","description":"application.presenter.api.model.MedicalTechnologyPatch.MedicalTechnologyPatch","location":"building-management-microservice/application.presenter.api.model/-medical-technology-patch/-medical-technology-patch.html","searchKeys":["MedicalTechnologyPatch","constructor(roomId: String?)","application.presenter.api.model.MedicalTechnologyPatch.MedicalTechnologyPatch"]},{"name":"constructor(roomRepository: RoomRepository)","description":"application.handler.EventHandlers.HumidityEventHandler.HumidityEventHandler","location":"building-management-microservice/application.handler/-event-handlers/-humidity-event-handler/-humidity-event-handler.html","searchKeys":["HumidityEventHandler","constructor(roomRepository: RoomRepository)","application.handler.EventHandlers.HumidityEventHandler.HumidityEventHandler"]},{"name":"constructor(roomRepository: RoomRepository)","description":"application.handler.EventHandlers.LuminosityEventHandler.LuminosityEventHandler","location":"building-management-microservice/application.handler/-event-handlers/-luminosity-event-handler/-luminosity-event-handler.html","searchKeys":["LuminosityEventHandler","constructor(roomRepository: RoomRepository)","application.handler.EventHandlers.LuminosityEventHandler.LuminosityEventHandler"]},{"name":"constructor(roomRepository: RoomRepository)","description":"application.handler.EventHandlers.PresenceEventHandler.PresenceEventHandler","location":"building-management-microservice/application.handler/-event-handlers/-presence-event-handler/-presence-event-handler.html","searchKeys":["PresenceEventHandler","constructor(roomRepository: RoomRepository)","application.handler.EventHandlers.PresenceEventHandler.PresenceEventHandler"]},{"name":"constructor(roomRepository: RoomRepository)","description":"application.handler.EventHandlers.TemperatureEventHandler.TemperatureEventHandler","location":"building-management-microservice/application.handler/-event-handlers/-temperature-event-handler/-temperature-event-handler.html","searchKeys":["TemperatureEventHandler","constructor(roomRepository: RoomRepository)","application.handler.EventHandlers.TemperatureEventHandler.TemperatureEventHandler"]},{"name":"constructor(roomRepository: RoomRepository)","description":"application.service.RoomService.GetAllRoomEntry.GetAllRoomEntry","location":"building-management-microservice/application.service/-room-service/-get-all-room-entry/-get-all-room-entry.html","searchKeys":["GetAllRoomEntry","constructor(roomRepository: RoomRepository)","application.service.RoomService.GetAllRoomEntry.GetAllRoomEntry"]},{"name":"constructor(temperature: Temperature? = null, humidity: Humidity? = null, luminosity: Luminosity? = null, presence: Presence? = null)","description":"entity.zone.RoomEnvironmentalData.RoomEnvironmentalData","location":"building-management-microservice/entity.zone/-room-environmental-data/-room-environmental-data.html","searchKeys":["RoomEnvironmentalData","constructor(temperature: Temperature? = null, humidity: Humidity? = null, luminosity: Luminosity? = null, presence: Presence? = null)","entity.zone.RoomEnvironmentalData.RoomEnvironmentalData"]},{"name":"constructor(temperature: ValueWithUnit<Double>? = null, humidity: Double? = null, luminosity: ValueWithUnit<Double>? = null, presence: Boolean? = null)","description":"application.presenter.api.model.EnvironmentalDataApiDto.EnvironmentalDataApiDto","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/-environmental-data-api-dto.html","searchKeys":["EnvironmentalDataApiDto","constructor(temperature: ValueWithUnit<Double>? = null, humidity: Double? = null, luminosity: ValueWithUnit<Double>? = null, presence: Boolean? = null)","application.presenter.api.model.EnvironmentalDataApiDto.EnvironmentalDataApiDto"]},{"name":"constructor(temperatureValue: Double, temperatureUnit: RoomEventPayloads.TemperaturePayloadUnit)","description":"application.presenter.event.model.RoomEventPayloads.TemperaturePayload.TemperaturePayload","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-temperature-payload/-temperature-payload.html","searchKeys":["TemperaturePayload","constructor(temperatureValue: Double, temperatureUnit: RoomEventPayloads.TemperaturePayloadUnit)","application.presenter.event.model.RoomEventPayloads.TemperaturePayload.TemperaturePayload"]},{"name":"constructor(value: Double, unit: LightUnit = LightUnit.LUX)","description":"entity.environment.Luminosity.Luminosity","location":"building-management-microservice/entity.environment/-luminosity/-luminosity.html","searchKeys":["Luminosity","constructor(value: Double, unit: LightUnit = LightUnit.LUX)","entity.environment.Luminosity.Luminosity"]},{"name":"constructor(value: Double, unit: TemperatureUnit = TemperatureUnit.CELSIUS)","description":"entity.environment.Temperature.Temperature","location":"building-management-microservice/entity.environment/-temperature/-temperature.html","searchKeys":["Temperature","constructor(value: Double, unit: TemperatureUnit = TemperatureUnit.CELSIUS)","entity.environment.Temperature.Temperature"]},{"name":"constructor(value: String)","description":"entity.medicaltechnology.MedicalTechnologyID.MedicalTechnologyID","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-i-d/-medical-technology-i-d.html","searchKeys":["MedicalTechnologyID","constructor(value: String)","entity.medicaltechnology.MedicalTechnologyID.MedicalTechnologyID"]},{"name":"constructor(value: String)","description":"entity.zone.RoomID.RoomID","location":"building-management-microservice/entity.zone/-room-i-d/-room-i-d.html","searchKeys":["RoomID","constructor(value: String)","entity.zone.RoomID.RoomID"]},{"name":"constructor(value: String)","description":"entity.zone.ZoneID.ZoneID","location":"building-management-microservice/entity.zone/-zone-i-d/-zone-i-d.html","searchKeys":["ZoneID","constructor(value: String)","entity.zone.ZoneID.ZoneID"]},{"name":"constructor(value: T, unit: String)","description":"application.presenter.api.model.ValueWithUnit.ValueWithUnit","location":"building-management-microservice/application.presenter.api.model/-value-with-unit/-value-with-unit.html","searchKeys":["ValueWithUnit","constructor(value: T, unit: String)","application.presenter.api.model.ValueWithUnit.ValueWithUnit"]},{"name":"data class EnvironmentalDataApiDto(val temperature: ValueWithUnit<Double>? = null, val humidity: Double? = null, val luminosity: ValueWithUnit<Double>? = null, val presence: Boolean? = null)","description":"application.presenter.api.model.EnvironmentalDataApiDto","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/index.html","searchKeys":["EnvironmentalDataApiDto","data class EnvironmentalDataApiDto(val temperature: ValueWithUnit<Double>? = null, val humidity: Double? = null, val luminosity: ValueWithUnit<Double>? = null, val presence: Boolean? = null)","application.presenter.api.model.EnvironmentalDataApiDto"]},{"name":"data class Humidity(val percentage: Double)","description":"entity.environment.Humidity","location":"building-management-microservice/entity.environment/-humidity/index.html","searchKeys":["Humidity","data class Humidity(val percentage: Double)","entity.environment.Humidity"]},{"name":"data class HumidityPayload(val humidityPercentage: Int) : RoomEventPayload","description":"application.presenter.event.model.RoomEventPayloads.HumidityPayload","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-humidity-payload/index.html","searchKeys":["HumidityPayload","data class HumidityPayload(val humidityPercentage: Int) : RoomEventPayload","application.presenter.event.model.RoomEventPayloads.HumidityPayload"]},{"name":"data class Luminosity(val value: Double, val unit: LightUnit = LightUnit.LUX)","description":"entity.environment.Luminosity","location":"building-management-microservice/entity.environment/-luminosity/index.html","searchKeys":["Luminosity","data class Luminosity(val value: Double, val unit: LightUnit = LightUnit.LUX)","entity.environment.Luminosity"]},{"name":"data class LuminosityPayload(val luminosityValue: Double, val luminosityUnit: RoomEventPayloads.LuminosityPayloadUnit) : RoomEventPayload","description":"application.presenter.event.model.RoomEventPayloads.LuminosityPayload","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-luminosity-payload/index.html","searchKeys":["LuminosityPayload","data class LuminosityPayload(val luminosityValue: Double, val luminosityUnit: RoomEventPayloads.LuminosityPayloadUnit) : RoomEventPayload","application.presenter.event.model.RoomEventPayloads.LuminosityPayload"]},{"name":"data class MedicalTechnology(val id: MedicalTechnologyID, val name: String, val description: String, val type: MedicalTechnologyType, val isInUse: Boolean = false, val roomId: RoomID? = null)","description":"entity.medicaltechnology.MedicalTechnology","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/index.html","searchKeys":["MedicalTechnology","data class MedicalTechnology(val id: MedicalTechnologyID, val name: String, val description: String, val type: MedicalTechnologyType, val isInUse: Boolean = false, val roomId: RoomID? = null)","entity.medicaltechnology.MedicalTechnology"]},{"name":"data class MedicalTechnologyApiDto(val id: String, val name: String, val description: String, val type: MedicalTechnologyApiDtoType, val inUse: Boolean = false, val roomId: String? = null)","description":"application.presenter.api.model.MedicalTechnologyApiDto","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto/index.html","searchKeys":["MedicalTechnologyApiDto","data class MedicalTechnologyApiDto(val id: String, val name: String, val description: String, val type: MedicalTechnologyApiDtoType, val inUse: Boolean = false, val roomId: String? = null)","application.presenter.api.model.MedicalTechnologyApiDto"]},{"name":"data class MedicalTechnologyEntry(val id: String, val name: String, val description: String, val type: MedicalTechnologyApiDtoType)","description":"application.presenter.api.model.MedicalTechnologyEntry","location":"building-management-microservice/application.presenter.api.model/-medical-technology-entry/index.html","searchKeys":["MedicalTechnologyEntry","data class MedicalTechnologyEntry(val id: String, val name: String, val description: String, val type: MedicalTechnologyApiDtoType)","application.presenter.api.model.MedicalTechnologyEntry"]},{"name":"data class MedicalTechnologyEvent(val key: String, val data: MedicalTechnologyUsagePayload, val dateTime: String) : Event<MedicalTechnologyUsagePayload> ","description":"application.presenter.event.model.MedicalTechnologyEvent","location":"building-management-microservice/application.presenter.event.model/-medical-technology-event/index.html","searchKeys":["MedicalTechnologyEvent","data class MedicalTechnologyEvent(val key: String, val data: MedicalTechnologyUsagePayload, val dateTime: String) : Event<MedicalTechnologyUsagePayload> ","application.presenter.event.model.MedicalTechnologyEvent"]},{"name":"data class MedicalTechnologyID(val value: String)","description":"entity.medicaltechnology.MedicalTechnologyID","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-i-d/index.html","searchKeys":["MedicalTechnologyID","data class MedicalTechnologyID(val value: String)","entity.medicaltechnology.MedicalTechnologyID"]},{"name":"data class MedicalTechnologyPatch(val roomId: String?)","description":"application.presenter.api.model.MedicalTechnologyPatch","location":"building-management-microservice/application.presenter.api.model/-medical-technology-patch/index.html","searchKeys":["MedicalTechnologyPatch","data class MedicalTechnologyPatch(val roomId: String?)","application.presenter.api.model.MedicalTechnologyPatch"]},{"name":"data class MedicalTechnologyUsagePayload(val medicalTechnologyID: String, val inUse: Boolean)","description":"application.presenter.event.model.MedicalTechnologyUsagePayload","location":"building-management-microservice/application.presenter.event.model/-medical-technology-usage-payload/index.html","searchKeys":["MedicalTechnologyUsagePayload","data class MedicalTechnologyUsagePayload(val medicalTechnologyID: String, val inUse: Boolean)","application.presenter.event.model.MedicalTechnologyUsagePayload"]},{"name":"data class Presence(val presenceDetected: Boolean)","description":"entity.environment.Presence","location":"building-management-microservice/entity.environment/-presence/index.html","searchKeys":["Presence","data class Presence(val presenceDetected: Boolean)","entity.environment.Presence"]},{"name":"data class PresencePayload(val presenceDetected: Boolean) : RoomEventPayload","description":"application.presenter.event.model.RoomEventPayloads.PresencePayload","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-presence-payload/index.html","searchKeys":["PresencePayload","data class PresencePayload(val presenceDetected: Boolean) : RoomEventPayload","application.presenter.event.model.RoomEventPayloads.PresencePayload"]},{"name":"data class ResponseEntry<out T>(val entry: T, val url: String)","description":"infrastructure.api.util.ApiResponses.ResponseEntry","location":"building-management-microservice/infrastructure.api.util/-api-responses/-response-entry/index.html","searchKeys":["ResponseEntry","data class ResponseEntry<out T>(val entry: T, val url: String)","infrastructure.api.util.ApiResponses.ResponseEntry"]},{"name":"data class ResponseEntryList<out T>(val entries: List<T>, val total: Int = entries.count())","description":"infrastructure.api.util.ApiResponses.ResponseEntryList","location":"building-management-microservice/infrastructure.api.util/-api-responses/-response-entry-list/index.html","searchKeys":["ResponseEntryList","data class ResponseEntryList<out T>(val entries: List<T>, val total: Int = entries.count())","infrastructure.api.util.ApiResponses.ResponseEntryList"]},{"name":"data class Room(val id: RoomID, val type: RoomType, val zoneId: ZoneID, val name: String? = null, val environmentalData: RoomEnvironmentalData = RoomEnvironmentalData())","description":"entity.zone.Room","location":"building-management-microservice/entity.zone/-room/index.html","searchKeys":["Room","data class Room(val id: RoomID, val type: RoomType, val zoneId: ZoneID, val name: String? = null, val environmentalData: RoomEnvironmentalData = RoomEnvironmentalData())","entity.zone.Room"]},{"name":"data class RoomApiDto(val id: String, val name: String, val zoneId: String, val type: RoomApiDtoType, val environmentalData: EnvironmentalDataApiDto = EnvironmentalDataApiDto())","description":"application.presenter.api.model.RoomApiDto","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/index.html","searchKeys":["RoomApiDto","data class RoomApiDto(val id: String, val name: String, val zoneId: String, val type: RoomApiDtoType, val environmentalData: EnvironmentalDataApiDto = EnvironmentalDataApiDto())","application.presenter.api.model.RoomApiDto"]},{"name":"data class RoomEntry(val id: String, val name: String, val zoneId: String, val type: RoomApiDtoType)","description":"application.presenter.api.model.RoomEntry","location":"building-management-microservice/application.presenter.api.model/-room-entry/index.html","searchKeys":["RoomEntry","data class RoomEntry(val id: String, val name: String, val zoneId: String, val type: RoomApiDtoType)","application.presenter.api.model.RoomEntry"]},{"name":"data class RoomEnvironmentalData(val temperature: Temperature? = null, val humidity: Humidity? = null, val luminosity: Luminosity? = null, val presence: Presence? = null)","description":"entity.zone.RoomEnvironmentalData","location":"building-management-microservice/entity.zone/-room-environmental-data/index.html","searchKeys":["RoomEnvironmentalData","data class RoomEnvironmentalData(val temperature: Temperature? = null, val humidity: Humidity? = null, val luminosity: Luminosity? = null, val presence: Presence? = null)","entity.zone.RoomEnvironmentalData"]},{"name":"data class RoomEvent<E : RoomEventPayload>(val key: String, val roomId: String, val data: E, val dateTime: String) : Event<E> ","description":"application.presenter.event.model.RoomEvent","location":"building-management-microservice/application.presenter.event.model/-room-event/index.html","searchKeys":["RoomEvent","data class RoomEvent<E : RoomEventPayload>(val key: String, val roomId: String, val data: E, val dateTime: String) : Event<E> ","application.presenter.event.model.RoomEvent"]},{"name":"data class RoomID(val value: String)","description":"entity.zone.RoomID","location":"building-management-microservice/entity.zone/-room-i-d/index.html","searchKeys":["RoomID","data class RoomID(val value: String)","entity.zone.RoomID"]},{"name":"data class Temperature(val value: Double, val unit: TemperatureUnit = TemperatureUnit.CELSIUS)","description":"entity.environment.Temperature","location":"building-management-microservice/entity.environment/-temperature/index.html","searchKeys":["Temperature","data class Temperature(val value: Double, val unit: TemperatureUnit = TemperatureUnit.CELSIUS)","entity.environment.Temperature"]},{"name":"data class TemperaturePayload(val temperatureValue: Double, val temperatureUnit: RoomEventPayloads.TemperaturePayloadUnit) : RoomEventPayload","description":"application.presenter.event.model.RoomEventPayloads.TemperaturePayload","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-temperature-payload/index.html","searchKeys":["TemperaturePayload","data class TemperaturePayload(val temperatureValue: Double, val temperatureUnit: RoomEventPayloads.TemperaturePayloadUnit) : RoomEventPayload","application.presenter.event.model.RoomEventPayloads.TemperaturePayload"]},{"name":"data class TimeSeriesMedicalTechnologyMetadata(val medicalTechnologyId: MedicalTechnologyID, val roomId: RoomID)","description":"application.presenter.database.model.TimeSeriesMedicalTechnologyMetadata","location":"building-management-microservice/application.presenter.database.model/-time-series-medical-technology-metadata/index.html","searchKeys":["TimeSeriesMedicalTechnologyMetadata","data class TimeSeriesMedicalTechnologyMetadata(val medicalTechnologyId: MedicalTechnologyID, val roomId: RoomID)","application.presenter.database.model.TimeSeriesMedicalTechnologyMetadata"]},{"name":"data class TimeSeriesMedicalTechnologyUsage(val dateTime: Instant, val metadata: TimeSeriesMedicalTechnologyMetadata, val value: Boolean)","description":"application.presenter.database.model.TimeSeriesMedicalTechnologyUsage","location":"building-management-microservice/application.presenter.database.model/-time-series-medical-technology-usage/index.html","searchKeys":["TimeSeriesMedicalTechnologyUsage","data class TimeSeriesMedicalTechnologyUsage(val dateTime: Instant, val metadata: TimeSeriesMedicalTechnologyMetadata, val value: Boolean)","application.presenter.database.model.TimeSeriesMedicalTechnologyUsage"]},{"name":"data class TimeSeriesRoomEnvironmentalData(val dateTime: Instant, val metadata: TimeSeriesRoomMetadata, val value: Double)","description":"application.presenter.database.model.TimeSeriesRoomEnvironmentalData","location":"building-management-microservice/application.presenter.database.model/-time-series-room-environmental-data/index.html","searchKeys":["TimeSeriesRoomEnvironmentalData","data class TimeSeriesRoomEnvironmentalData(val dateTime: Instant, val metadata: TimeSeriesRoomMetadata, val value: Double)","application.presenter.database.model.TimeSeriesRoomEnvironmentalData"]},{"name":"data class TimeSeriesRoomMetadata(val roomId: RoomID, val type: TimeSeriesDataType, val unit: String? = null)","description":"application.presenter.database.model.TimeSeriesRoomMetadata","location":"building-management-microservice/application.presenter.database.model/-time-series-room-metadata/index.html","searchKeys":["TimeSeriesRoomMetadata","data class TimeSeriesRoomMetadata(val roomId: RoomID, val type: TimeSeriesDataType, val unit: String? = null)","application.presenter.database.model.TimeSeriesRoomMetadata"]},{"name":"data class ValueWithUnit<T>(val value: T, val unit: String)","description":"application.presenter.api.model.ValueWithUnit","location":"building-management-microservice/application.presenter.api.model/-value-with-unit/index.html","searchKeys":["ValueWithUnit","data class ValueWithUnit<T>(val value: T, val unit: String)","application.presenter.api.model.ValueWithUnit"]},{"name":"data class Zone(val id: ZoneID, val name: String, val description: String)","description":"entity.zone.Zone","location":"building-management-microservice/entity.zone/-zone/index.html","searchKeys":["Zone","data class Zone(val id: ZoneID, val name: String, val description: String)","entity.zone.Zone"]},{"name":"data class ZoneID(val value: String)","description":"entity.zone.ZoneID","location":"building-management-microservice/entity.zone/-zone-i-d/index.html","searchKeys":["ZoneID","data class ZoneID(val value: String)","entity.zone.ZoneID"]},{"name":"enum LightUnit : Enum<LightUnit> ","description":"entity.environment.LightUnit","location":"building-management-microservice/entity.environment/-light-unit/index.html","searchKeys":["LightUnit","enum LightUnit : Enum<LightUnit> ","entity.environment.LightUnit"]},{"name":"enum LuminosityPayloadUnit : Enum<RoomEventPayloads.LuminosityPayloadUnit> ","description":"application.presenter.event.model.RoomEventPayloads.LuminosityPayloadUnit","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-luminosity-payload-unit/index.html","searchKeys":["LuminosityPayloadUnit","enum LuminosityPayloadUnit : Enum<RoomEventPayloads.LuminosityPayloadUnit> ","application.presenter.event.model.RoomEventPayloads.LuminosityPayloadUnit"]},{"name":"enum MedicalTechnologyApiDtoType : Enum<MedicalTechnologyApiDtoType> ","description":"application.presenter.api.model.MedicalTechnologyApiDtoType","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto-type/index.html","searchKeys":["MedicalTechnologyApiDtoType","enum MedicalTechnologyApiDtoType : Enum<MedicalTechnologyApiDtoType> ","application.presenter.api.model.MedicalTechnologyApiDtoType"]},{"name":"enum MedicalTechnologyType : Enum<MedicalTechnologyType> ","description":"entity.medicaltechnology.MedicalTechnologyType","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-type/index.html","searchKeys":["MedicalTechnologyType","enum MedicalTechnologyType : Enum<MedicalTechnologyType> ","entity.medicaltechnology.MedicalTechnologyType"]},{"name":"enum RoomApiDtoType : Enum<RoomApiDtoType> ","description":"application.presenter.api.model.RoomApiDtoType","location":"building-management-microservice/application.presenter.api.model/-room-api-dto-type/index.html","searchKeys":["RoomApiDtoType","enum RoomApiDtoType : Enum<RoomApiDtoType> ","application.presenter.api.model.RoomApiDtoType"]},{"name":"enum RoomType : Enum<RoomType> ","description":"entity.zone.RoomType","location":"building-management-microservice/entity.zone/-room-type/index.html","searchKeys":["RoomType","enum RoomType : Enum<RoomType> ","entity.zone.RoomType"]},{"name":"enum TemperaturePayloadUnit : Enum<RoomEventPayloads.TemperaturePayloadUnit> ","description":"application.presenter.event.model.RoomEventPayloads.TemperaturePayloadUnit","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-temperature-payload-unit/index.html","searchKeys":["TemperaturePayloadUnit","enum TemperaturePayloadUnit : Enum<RoomEventPayloads.TemperaturePayloadUnit> ","application.presenter.event.model.RoomEventPayloads.TemperaturePayloadUnit"]},{"name":"enum TemperatureUnit : Enum<TemperatureUnit> ","description":"entity.environment.TemperatureUnit","location":"building-management-microservice/entity.environment/-temperature-unit/index.html","searchKeys":["TemperatureUnit","enum TemperatureUnit : Enum<TemperatureUnit> ","entity.environment.TemperatureUnit"]},{"name":"enum TimeSeriesDataType : Enum<TimeSeriesDataType> ","description":"application.presenter.database.model.TimeSeriesDataType","location":"building-management-microservice/application.presenter.database.model/-time-series-data-type/index.html","searchKeys":["TimeSeriesDataType","enum TimeSeriesDataType : Enum<TimeSeriesDataType> ","application.presenter.database.model.TimeSeriesDataType"]},{"name":"fun Application.medicalTechnologyAPI(apiPath: String, port: Int, provider: ManagerProvider)","description":"infrastructure.api.medicalTechnologyAPI","location":"building-management-microservice/infrastructure.api/medical-technology-a-p-i.html","searchKeys":["medicalTechnologyAPI","fun Application.medicalTechnologyAPI(apiPath: String, port: Int, provider: ManagerProvider)","infrastructure.api.medicalTechnologyAPI"]},{"name":"fun Application.roomAPI(apiPath: String, port: Int, provider: ManagerProvider)","description":"infrastructure.api.roomAPI","location":"building-management-microservice/infrastructure.api/room-a-p-i.html","searchKeys":["roomAPI","fun Application.roomAPI(apiPath: String, port: Int, provider: ManagerProvider)","infrastructure.api.roomAPI"]},{"name":"fun BasicDigitalTwin.toMedicalTechnology(): MedicalTechnology","description":"infrastructure.digitaltwins.adtpresentation.MedicalTechnologyAdtPresentation.toMedicalTechnology","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-medical-technology-adt-presentation/to-medical-technology.html","searchKeys":["toMedicalTechnology","fun BasicDigitalTwin.toMedicalTechnology(): MedicalTechnology","infrastructure.digitaltwins.adtpresentation.MedicalTechnologyAdtPresentation.toMedicalTechnology"]},{"name":"fun BasicDigitalTwin.toRoom(): Room","description":"infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation.toRoom","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-room-adt-presentation/to-room.html","searchKeys":["toRoom","fun BasicDigitalTwin.toRoom(): Room","infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation.toRoom"]},{"name":"fun Boolean.rollback(rollbackActions: () -> Unit): Boolean","description":"application.controller.util.rollback","location":"building-management-microservice/application.controller.util/rollback.html","searchKeys":["rollback","fun Boolean.rollback(rollbackActions: () -> Unit): Boolean","application.controller.util.rollback"]},{"name":"fun Map<TimeSeriesDataType, TimeSeriesRoomEnvironmentalData?>.toRoomEnvironmentalData(): RoomEnvironmentalData","description":"application.presenter.database.serialization.toRoomEnvironmentalData","location":"building-management-microservice/application.presenter.database.serialization/to-room-environmental-data.html","searchKeys":["toRoomEnvironmentalData","fun Map<TimeSeriesDataType, TimeSeriesRoomEnvironmentalData?>.toRoomEnvironmentalData(): RoomEnvironmentalData","application.presenter.database.serialization.toRoomEnvironmentalData"]},{"name":"fun MedicalTechnology.toDigitalTwin(): BasicDigitalTwin","description":"infrastructure.digitaltwins.adtpresentation.MedicalTechnologyAdtPresentation.toDigitalTwin","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-medical-technology-adt-presentation/to-digital-twin.html","searchKeys":["toDigitalTwin","fun MedicalTechnology.toDigitalTwin(): BasicDigitalTwin","infrastructure.digitaltwins.adtpresentation.MedicalTechnologyAdtPresentation.toDigitalTwin"]},{"name":"fun MedicalTechnology.toMedicalTechnologyApiDto(): MedicalTechnologyApiDto","description":"application.presenter.api.serializer.ApiSerializer.toMedicalTechnologyApiDto","location":"building-management-microservice/application.presenter.api.serializer/-api-serializer/to-medical-technology-api-dto.html","searchKeys":["toMedicalTechnologyApiDto","fun MedicalTechnology.toMedicalTechnologyApiDto(): MedicalTechnologyApiDto","application.presenter.api.serializer.ApiSerializer.toMedicalTechnologyApiDto"]},{"name":"fun MedicalTechnologyEntry.toMedicalTechnology(): MedicalTechnology","description":"application.presenter.api.deserializer.ApiDeserializer.toMedicalTechnology","location":"building-management-microservice/application.presenter.api.deserializer/-api-deserializer/to-medical-technology.html","searchKeys":["toMedicalTechnology","fun MedicalTechnologyEntry.toMedicalTechnology(): MedicalTechnology","application.presenter.api.deserializer.ApiDeserializer.toMedicalTechnology"]},{"name":"fun Room.toDigitalTwin(): BasicDigitalTwin","description":"infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation.toDigitalTwin","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-room-adt-presentation/to-digital-twin.html","searchKeys":["toDigitalTwin","fun Room.toDigitalTwin(): BasicDigitalTwin","infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation.toDigitalTwin"]},{"name":"fun Room.toRoomApiDto(): RoomApiDto","description":"application.presenter.api.serializer.ApiSerializer.toRoomApiDto","location":"building-management-microservice/application.presenter.api.serializer/-api-serializer/to-room-api-dto.html","searchKeys":["toRoomApiDto","fun Room.toRoomApiDto(): RoomApiDto","application.presenter.api.serializer.ApiSerializer.toRoomApiDto"]},{"name":"fun Room.toRoomEntry(): RoomEntry","description":"application.presenter.api.serializer.ApiSerializer.toRoomEntry","location":"building-management-microservice/application.presenter.api.serializer/-api-serializer/to-room-entry.html","searchKeys":["toRoomEntry","fun Room.toRoomEntry(): RoomEntry","application.presenter.api.serializer.ApiSerializer.toRoomEntry"]},{"name":"fun RoomEntry.toRoom(): Room","description":"application.presenter.api.deserializer.ApiDeserializer.toRoom","location":"building-management-microservice/application.presenter.api.deserializer/-api-deserializer/to-room.html","searchKeys":["toRoom","fun RoomEntry.toRoom(): Room","application.presenter.api.deserializer.ApiDeserializer.toRoom"]},{"name":"fun RoomEnvironmentalData.toTimeSeries(dateTime: Instant, roomId: RoomID): Map<TimeSeriesDataType, TimeSeriesRoomEnvironmentalData?>","description":"application.presenter.database.serialization.toTimeSeries","location":"building-management-microservice/application.presenter.database.serialization/to-time-series.html","searchKeys":["toTimeSeries","fun RoomEnvironmentalData.toTimeSeries(dateTime: Instant, roomId: RoomID): Map<TimeSeriesDataType, TimeSeriesRoomEnvironmentalData?>","application.presenter.database.serialization.toTimeSeries"]},{"name":"fun RoomEventPayloads.HumidityPayload.toHumidity(): Humidity","description":"application.presenter.event.serialization.EventSerialization.toHumidity","location":"building-management-microservice/application.presenter.event.serialization/-event-serialization/to-humidity.html","searchKeys":["toHumidity","fun RoomEventPayloads.HumidityPayload.toHumidity(): Humidity","application.presenter.event.serialization.EventSerialization.toHumidity"]},{"name":"fun RoomEventPayloads.LuminosityPayload.toLuminosity(): Luminosity","description":"application.presenter.event.serialization.EventSerialization.toLuminosity","location":"building-management-microservice/application.presenter.event.serialization/-event-serialization/to-luminosity.html","searchKeys":["toLuminosity","fun RoomEventPayloads.LuminosityPayload.toLuminosity(): Luminosity","application.presenter.event.serialization.EventSerialization.toLuminosity"]},{"name":"fun RoomEventPayloads.PresencePayload.toPresence(): Presence","description":"application.presenter.event.serialization.EventSerialization.toPresence","location":"building-management-microservice/application.presenter.event.serialization/-event-serialization/to-presence.html","searchKeys":["toPresence","fun RoomEventPayloads.PresencePayload.toPresence(): Presence","application.presenter.event.serialization.EventSerialization.toPresence"]},{"name":"fun RoomEventPayloads.TemperaturePayload.toTemperature(): Temperature","description":"application.presenter.event.serialization.EventSerialization.toTemperature","location":"building-management-microservice/application.presenter.event.serialization/-event-serialization/to-temperature.html","searchKeys":["toTemperature","fun RoomEventPayloads.TemperaturePayload.toTemperature(): Temperature","application.presenter.event.serialization.EventSerialization.toTemperature"]},{"name":"fun String.toEvent(eventKey: String): Event<*>","description":"application.presenter.event.serialization.EventSerialization.toEvent","location":"building-management-microservice/application.presenter.event.serialization/-event-serialization/to-event.html","searchKeys":["toEvent","fun String.toEvent(eventKey: String): Event<*>","application.presenter.event.serialization.EventSerialization.toEvent"]},{"name":"fun and(whereClause: String): AdtQuery","description":"infrastructure.digitaltwins.query.AdtQuery.and","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/and.html","searchKeys":["and","fun and(whereClause: String): AdtQuery","infrastructure.digitaltwins.query.AdtQuery.and"]},{"name":"fun createQuery(): AdtQuery","description":"infrastructure.digitaltwins.query.AdtQuery.Companion.createQuery","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/-companion/create-query.html","searchKeys":["createQuery","fun createQuery(): AdtQuery","infrastructure.digitaltwins.query.AdtQuery.Companion.createQuery"]},{"name":"fun fromDigitalTwins(alias: String): AdtQuery","description":"infrastructure.digitaltwins.query.AdtQuery.fromDigitalTwins","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/from-digital-twins.html","searchKeys":["fromDigitalTwins","fun fromDigitalTwins(alias: String): AdtQuery","infrastructure.digitaltwins.query.AdtQuery.fromDigitalTwins"]},{"name":"fun isLocatedRelationshipId(medicalTechnologyID: MedicalTechnologyID): String","description":"infrastructure.digitaltwins.adtpresentation.MedicalTechnologyAdtPresentation.isLocatedRelationshipId","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-medical-technology-adt-presentation/is-located-relationship-id.html","searchKeys":["isLocatedRelationshipId","fun isLocatedRelationshipId(medicalTechnologyID: MedicalTechnologyID): String","infrastructure.digitaltwins.adtpresentation.MedicalTechnologyAdtPresentation.isLocatedRelationshipId"]},{"name":"fun joinRelationship(dstAlias: String, srcAlias: String, relationshipName: String): AdtQuery","description":"infrastructure.digitaltwins.query.AdtQuery.joinRelationship","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/join-relationship.html","searchKeys":["joinRelationship","fun joinRelationship(dstAlias: String, srcAlias: String, relationshipName: String): AdtQuery","infrastructure.digitaltwins.query.AdtQuery.joinRelationship"]},{"name":"fun loadConsumerProperties(boostrapServerUrl: String, schemaRegistryUrl: String): Map<String, Serializable>","description":"infrastructure.events.loadConsumerProperties","location":"building-management-microservice/infrastructure.events/load-consumer-properties.html","searchKeys":["loadConsumerProperties","fun loadConsumerProperties(boostrapServerUrl: String, schemaRegistryUrl: String): Map<String, Serializable>","infrastructure.events.loadConsumerProperties"]},{"name":"fun main()","description":".main","location":"building-management-microservice/[root]/main.html","searchKeys":["main","fun main()",".main"]},{"name":"fun select(vararg elements: String): AdtQuery","description":"infrastructure.digitaltwins.query.AdtQuery.select","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/select.html","searchKeys":["select","fun select(vararg elements: String): AdtQuery","infrastructure.digitaltwins.query.AdtQuery.select"]},{"name":"fun selectTop(numberOfElementsToSelect: Int, vararg elements: String): AdtQuery","description":"infrastructure.digitaltwins.query.AdtQuery.selectTop","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/select-top.html","searchKeys":["selectTop","fun selectTop(numberOfElementsToSelect: Int, vararg elements: String): AdtQuery","infrastructure.digitaltwins.query.AdtQuery.selectTop"]},{"name":"fun start()","description":"infrastructure.api.APIController.start","location":"building-management-microservice/infrastructure.api/-a-p-i-controller/start.html","searchKeys":["start","fun start()","infrastructure.api.APIController.start"]},{"name":"fun start()","description":"infrastructure.events.KafkaClient.start","location":"building-management-microservice/infrastructure.events/-kafka-client/start.html","searchKeys":["start","fun start()","infrastructure.events.KafkaClient.start"]},{"name":"fun valueOf(value: String): LightUnit","description":"entity.environment.LightUnit.valueOf","location":"building-management-microservice/entity.environment/-light-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LightUnit","entity.environment.LightUnit.valueOf"]},{"name":"fun valueOf(value: String): MedicalTechnologyApiDtoType","description":"application.presenter.api.model.MedicalTechnologyApiDtoType.valueOf","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MedicalTechnologyApiDtoType","application.presenter.api.model.MedicalTechnologyApiDtoType.valueOf"]},{"name":"fun valueOf(value: String): MedicalTechnologyType","description":"entity.medicaltechnology.MedicalTechnologyType.valueOf","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MedicalTechnologyType","entity.medicaltechnology.MedicalTechnologyType.valueOf"]},{"name":"fun valueOf(value: String): RoomApiDtoType","description":"application.presenter.api.model.RoomApiDtoType.valueOf","location":"building-management-microservice/application.presenter.api.model/-room-api-dto-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RoomApiDtoType","application.presenter.api.model.RoomApiDtoType.valueOf"]},{"name":"fun valueOf(value: String): RoomEventPayloads.LuminosityPayloadUnit","description":"application.presenter.event.model.RoomEventPayloads.LuminosityPayloadUnit.valueOf","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-luminosity-payload-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RoomEventPayloads.LuminosityPayloadUnit","application.presenter.event.model.RoomEventPayloads.LuminosityPayloadUnit.valueOf"]},{"name":"fun valueOf(value: String): RoomEventPayloads.TemperaturePayloadUnit","description":"application.presenter.event.model.RoomEventPayloads.TemperaturePayloadUnit.valueOf","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-temperature-payload-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RoomEventPayloads.TemperaturePayloadUnit","application.presenter.event.model.RoomEventPayloads.TemperaturePayloadUnit.valueOf"]},{"name":"fun valueOf(value: String): RoomType","description":"entity.zone.RoomType.valueOf","location":"building-management-microservice/entity.zone/-room-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RoomType","entity.zone.RoomType.valueOf"]},{"name":"fun valueOf(value: String): TemperatureUnit","description":"entity.environment.TemperatureUnit.valueOf","location":"building-management-microservice/entity.environment/-temperature-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TemperatureUnit","entity.environment.TemperatureUnit.valueOf"]},{"name":"fun valueOf(value: String): TimeSeriesDataType","description":"application.presenter.database.model.TimeSeriesDataType.valueOf","location":"building-management-microservice/application.presenter.database.model/-time-series-data-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TimeSeriesDataType","application.presenter.database.model.TimeSeriesDataType.valueOf"]},{"name":"fun values(): Array<LightUnit>","description":"entity.environment.LightUnit.values","location":"building-management-microservice/entity.environment/-light-unit/values.html","searchKeys":["values","fun values(): Array<LightUnit>","entity.environment.LightUnit.values"]},{"name":"fun values(): Array<MedicalTechnologyApiDtoType>","description":"application.presenter.api.model.MedicalTechnologyApiDtoType.values","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto-type/values.html","searchKeys":["values","fun values(): Array<MedicalTechnologyApiDtoType>","application.presenter.api.model.MedicalTechnologyApiDtoType.values"]},{"name":"fun values(): Array<MedicalTechnologyType>","description":"entity.medicaltechnology.MedicalTechnologyType.values","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-type/values.html","searchKeys":["values","fun values(): Array<MedicalTechnologyType>","entity.medicaltechnology.MedicalTechnologyType.values"]},{"name":"fun values(): Array<RoomApiDtoType>","description":"application.presenter.api.model.RoomApiDtoType.values","location":"building-management-microservice/application.presenter.api.model/-room-api-dto-type/values.html","searchKeys":["values","fun values(): Array<RoomApiDtoType>","application.presenter.api.model.RoomApiDtoType.values"]},{"name":"fun values(): Array<RoomEventPayloads.LuminosityPayloadUnit>","description":"application.presenter.event.model.RoomEventPayloads.LuminosityPayloadUnit.values","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-luminosity-payload-unit/values.html","searchKeys":["values","fun values(): Array<RoomEventPayloads.LuminosityPayloadUnit>","application.presenter.event.model.RoomEventPayloads.LuminosityPayloadUnit.values"]},{"name":"fun values(): Array<RoomEventPayloads.TemperaturePayloadUnit>","description":"application.presenter.event.model.RoomEventPayloads.TemperaturePayloadUnit.values","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-temperature-payload-unit/values.html","searchKeys":["values","fun values(): Array<RoomEventPayloads.TemperaturePayloadUnit>","application.presenter.event.model.RoomEventPayloads.TemperaturePayloadUnit.values"]},{"name":"fun values(): Array<RoomType>","description":"entity.zone.RoomType.values","location":"building-management-microservice/entity.zone/-room-type/values.html","searchKeys":["values","fun values(): Array<RoomType>","entity.zone.RoomType.values"]},{"name":"fun values(): Array<TemperatureUnit>","description":"entity.environment.TemperatureUnit.values","location":"building-management-microservice/entity.environment/-temperature-unit/values.html","searchKeys":["values","fun values(): Array<TemperatureUnit>","entity.environment.TemperatureUnit.values"]},{"name":"fun values(): Array<TimeSeriesDataType>","description":"application.presenter.database.model.TimeSeriesDataType.values","location":"building-management-microservice/application.presenter.database.model/-time-series-data-type/values.html","searchKeys":["values","fun values(): Array<TimeSeriesDataType>","application.presenter.database.model.TimeSeriesDataType.values"]},{"name":"fun where(whereClause: String): AdtQuery","description":"infrastructure.digitaltwins.query.AdtQuery.where","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/where.html","searchKeys":["where","fun where(whereClause: String): AdtQuery","infrastructure.digitaltwins.query.AdtQuery.where"]},{"name":"infix fun String.isOfModel(model: String): String","description":"infrastructure.digitaltwins.query.AdtQuery.Companion.AdtQueryUtils.isOfModel","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/-companion/-adt-query-utils/is-of-model.html","searchKeys":["isOfModel","infix fun String.isOfModel(model: String): String","infrastructure.digitaltwins.query.AdtQuery.Companion.AdtQueryUtils.isOfModel"]},{"name":"infix inline fun <T> String.eq(element: T): String","description":"infrastructure.digitaltwins.query.AdtQuery.Companion.AdtQueryUtils.eq","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/-companion/-adt-query-utils/eq.html","searchKeys":["eq","infix inline fun <T> String.eq(element: T): String","infrastructure.digitaltwins.query.AdtQuery.Companion.AdtQueryUtils.eq"]},{"name":"inline fun <T> Any?.propertyAs(defaultValue: T): T","description":"infrastructure.digitaltwins.adtpresentation.propertyAs","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/property-as.html","searchKeys":["propertyAs","inline fun <T> Any?.propertyAs(defaultValue: T): T","infrastructure.digitaltwins.adtpresentation.propertyAs"]},{"name":"interface ApplicationService<out T>","description":"application.service.ApplicationService","location":"building-management-microservice/application.service/-application-service/index.html","searchKeys":["ApplicationService","interface ApplicationService<out T>","application.service.ApplicationService"]},{"name":"interface Event<out E>","description":"application.presenter.event.model.Event","location":"building-management-microservice/application.presenter.event.model/-event/index.html","searchKeys":["Event","interface Event<out E>","application.presenter.event.model.Event"]},{"name":"interface EventHandler","description":"application.handler.EventHandler","location":"building-management-microservice/application.handler/-event-handler/index.html","searchKeys":["EventHandler","interface EventHandler","application.handler.EventHandler"]},{"name":"interface ManagerProvider","description":"infrastructure.provider.ManagerProvider","location":"building-management-microservice/infrastructure.provider/-manager-provider/index.html","searchKeys":["ManagerProvider","interface ManagerProvider","infrastructure.provider.ManagerProvider"]},{"name":"interface MedicalTechnologyDatabaseManager","description":"application.controller.manager.MedicalTechnologyDatabaseManager","location":"building-management-microservice/application.controller.manager/-medical-technology-database-manager/index.html","searchKeys":["MedicalTechnologyDatabaseManager","interface MedicalTechnologyDatabaseManager","application.controller.manager.MedicalTechnologyDatabaseManager"]},{"name":"interface MedicalTechnologyDigitalTwinManager","description":"application.controller.manager.MedicalTechnologyDigitalTwinManager","location":"building-management-microservice/application.controller.manager/-medical-technology-digital-twin-manager/index.html","searchKeys":["MedicalTechnologyDigitalTwinManager","interface MedicalTechnologyDigitalTwinManager","application.controller.manager.MedicalTechnologyDigitalTwinManager"]},{"name":"interface MedicalTechnologyRepository","description":"usecase.repository.MedicalTechnologyRepository","location":"building-management-microservice/usecase.repository/-medical-technology-repository/index.html","searchKeys":["MedicalTechnologyRepository","interface MedicalTechnologyRepository","usecase.repository.MedicalTechnologyRepository"]},{"name":"interface RoomDatabaseManager","description":"application.controller.manager.RoomDatabaseManager","location":"building-management-microservice/application.controller.manager/-room-database-manager/index.html","searchKeys":["RoomDatabaseManager","interface RoomDatabaseManager","application.controller.manager.RoomDatabaseManager"]},{"name":"interface RoomDigitalTwinManager","description":"application.controller.manager.RoomDigitalTwinManager","location":"building-management-microservice/application.controller.manager/-room-digital-twin-manager/index.html","searchKeys":["RoomDigitalTwinManager","interface RoomDigitalTwinManager","application.controller.manager.RoomDigitalTwinManager"]},{"name":"interface RoomEventPayload","description":"application.presenter.event.model.RoomEventPayload","location":"building-management-microservice/application.presenter.event.model/-room-event-payload/index.html","searchKeys":["RoomEventPayload","interface RoomEventPayload","application.presenter.event.model.RoomEventPayload"]},{"name":"interface RoomRepository","description":"usecase.repository.RoomRepository","location":"building-management-microservice/usecase.repository/-room-repository/index.html","searchKeys":["RoomRepository","interface RoomRepository","usecase.repository.RoomRepository"]},{"name":"interface UseCase<out X>","description":"usecase.UseCase","location":"building-management-microservice/usecase/-use-case/index.html","searchKeys":["UseCase","interface UseCase<out X>","usecase.UseCase"]},{"name":"object AdtQueryUtils","description":"infrastructure.digitaltwins.query.AdtQuery.Companion.AdtQueryUtils","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/-companion/-adt-query-utils/index.html","searchKeys":["AdtQueryUtils","object AdtQueryUtils","infrastructure.digitaltwins.query.AdtQuery.Companion.AdtQueryUtils"]},{"name":"object ApiDeserializer","description":"application.presenter.api.deserializer.ApiDeserializer","location":"building-management-microservice/application.presenter.api.deserializer/-api-deserializer/index.html","searchKeys":["ApiDeserializer","object ApiDeserializer","application.presenter.api.deserializer.ApiDeserializer"]},{"name":"object ApiResponses","description":"infrastructure.api.util.ApiResponses","location":"building-management-microservice/infrastructure.api.util/-api-responses/index.html","searchKeys":["ApiResponses","object ApiResponses","infrastructure.api.util.ApiResponses"]},{"name":"object ApiSerializer","description":"application.presenter.api.serializer.ApiSerializer","location":"building-management-microservice/application.presenter.api.serializer/-api-serializer/index.html","searchKeys":["ApiSerializer","object ApiSerializer","application.presenter.api.serializer.ApiSerializer"]},{"name":"object Companion","description":"infrastructure.api.APIController.Companion","location":"building-management-microservice/infrastructure.api/-a-p-i-controller/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.api.APIController.Companion"]},{"name":"object Companion","description":"infrastructure.database.DatabaseManager.Companion","location":"building-management-microservice/infrastructure.database/-database-manager/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.database.DatabaseManager.Companion"]},{"name":"object Companion","description":"infrastructure.digitaltwins.DigitalTwinManager.Companion","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.digitaltwins.DigitalTwinManager.Companion"]},{"name":"object Companion","description":"infrastructure.digitaltwins.query.AdtQuery.Companion","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.digitaltwins.query.AdtQuery.Companion"]},{"name":"object Companion","description":"infrastructure.events.KafkaClient.Companion","location":"building-management-microservice/infrastructure.events/-kafka-client/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.events.KafkaClient.Companion"]},{"name":"object EventHandlers","description":"application.handler.EventHandlers","location":"building-management-microservice/application.handler/-event-handlers/index.html","searchKeys":["EventHandlers","object EventHandlers","application.handler.EventHandlers"]},{"name":"object EventSerialization","description":"application.presenter.event.serialization.EventSerialization","location":"building-management-microservice/application.presenter.event.serialization/-event-serialization/index.html","searchKeys":["EventSerialization","object EventSerialization","application.presenter.event.serialization.EventSerialization"]},{"name":"object MedicalTechnologyAdtPresentation","description":"infrastructure.digitaltwins.adtpresentation.MedicalTechnologyAdtPresentation","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-medical-technology-adt-presentation/index.html","searchKeys":["MedicalTechnologyAdtPresentation","object MedicalTechnologyAdtPresentation","infrastructure.digitaltwins.adtpresentation.MedicalTechnologyAdtPresentation"]},{"name":"object MedicalTechnologyEventKey","description":"application.presenter.event.model.MedicalTechnologyEventKey","location":"building-management-microservice/application.presenter.event.model/-medical-technology-event-key/index.html","searchKeys":["MedicalTechnologyEventKey","object MedicalTechnologyEventKey","application.presenter.event.model.MedicalTechnologyEventKey"]},{"name":"object MedicalTechnologyService","description":"application.service.MedicalTechnologyService","location":"building-management-microservice/application.service/-medical-technology-service/index.html","searchKeys":["MedicalTechnologyService","object MedicalTechnologyService","application.service.MedicalTechnologyService"]},{"name":"object RoomAdtPresentation","description":"infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation","location":"building-management-microservice/infrastructure.digitaltwins.adtpresentation/-room-adt-presentation/index.html","searchKeys":["RoomAdtPresentation","object RoomAdtPresentation","infrastructure.digitaltwins.adtpresentation.RoomAdtPresentation"]},{"name":"object RoomEventKey","description":"application.presenter.event.model.RoomEventKey","location":"building-management-microservice/application.presenter.event.model/-room-event-key/index.html","searchKeys":["RoomEventKey","object RoomEventKey","application.presenter.event.model.RoomEventKey"]},{"name":"object RoomEventPayloads","description":"application.presenter.event.model.RoomEventPayloads","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/index.html","searchKeys":["RoomEventPayloads","object RoomEventPayloads","application.presenter.event.model.RoomEventPayloads"]},{"name":"object RoomService","description":"application.service.RoomService","location":"building-management-microservice/application.service/-room-service/index.html","searchKeys":["RoomService","object RoomService","application.service.RoomService"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.medicaltechnology.MedicalTechnology.equals","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.medicaltechnology.MedicalTechnology.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.zone.Room.equals","location":"building-management-microservice/entity.zone/-room/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.zone.Room.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.zone.Zone.equals","location":"building-management-microservice/entity.zone/-zone/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.zone.Zone.equals"]},{"name":"open override fun canHandle(event: Event<*>): Boolean","description":"application.handler.EventHandlers.HumidityEventHandler.canHandle","location":"building-management-microservice/application.handler/-event-handlers/-humidity-event-handler/can-handle.html","searchKeys":["canHandle","open override fun canHandle(event: Event<*>): Boolean","application.handler.EventHandlers.HumidityEventHandler.canHandle"]},{"name":"open override fun canHandle(event: Event<*>): Boolean","description":"application.handler.EventHandlers.LuminosityEventHandler.canHandle","location":"building-management-microservice/application.handler/-event-handlers/-luminosity-event-handler/can-handle.html","searchKeys":["canHandle","open override fun canHandle(event: Event<*>): Boolean","application.handler.EventHandlers.LuminosityEventHandler.canHandle"]},{"name":"open override fun canHandle(event: Event<*>): Boolean","description":"application.handler.EventHandlers.MedicalTechnologyEventHandler.canHandle","location":"building-management-microservice/application.handler/-event-handlers/-medical-technology-event-handler/can-handle.html","searchKeys":["canHandle","open override fun canHandle(event: Event<*>): Boolean","application.handler.EventHandlers.MedicalTechnologyEventHandler.canHandle"]},{"name":"open override fun canHandle(event: Event<*>): Boolean","description":"application.handler.EventHandlers.PresenceEventHandler.canHandle","location":"building-management-microservice/application.handler/-event-handlers/-presence-event-handler/can-handle.html","searchKeys":["canHandle","open override fun canHandle(event: Event<*>): Boolean","application.handler.EventHandlers.PresenceEventHandler.canHandle"]},{"name":"open override fun canHandle(event: Event<*>): Boolean","description":"application.handler.EventHandlers.TemperatureEventHandler.canHandle","location":"building-management-microservice/application.handler/-event-handlers/-temperature-event-handler/can-handle.html","searchKeys":["canHandle","open override fun canHandle(event: Event<*>): Boolean","application.handler.EventHandlers.TemperatureEventHandler.canHandle"]},{"name":"open override fun consume(event: Event<*>)","description":"application.handler.EventHandlers.HumidityEventHandler.consume","location":"building-management-microservice/application.handler/-event-handlers/-humidity-event-handler/consume.html","searchKeys":["consume","open override fun consume(event: Event<*>)","application.handler.EventHandlers.HumidityEventHandler.consume"]},{"name":"open override fun consume(event: Event<*>)","description":"application.handler.EventHandlers.LuminosityEventHandler.consume","location":"building-management-microservice/application.handler/-event-handlers/-luminosity-event-handler/consume.html","searchKeys":["consume","open override fun consume(event: Event<*>)","application.handler.EventHandlers.LuminosityEventHandler.consume"]},{"name":"open override fun consume(event: Event<*>)","description":"application.handler.EventHandlers.MedicalTechnologyEventHandler.consume","location":"building-management-microservice/application.handler/-event-handlers/-medical-technology-event-handler/consume.html","searchKeys":["consume","open override fun consume(event: Event<*>)","application.handler.EventHandlers.MedicalTechnologyEventHandler.consume"]},{"name":"open override fun consume(event: Event<*>)","description":"application.handler.EventHandlers.PresenceEventHandler.consume","location":"building-management-microservice/application.handler/-event-handlers/-presence-event-handler/consume.html","searchKeys":["consume","open override fun consume(event: Event<*>)","application.handler.EventHandlers.PresenceEventHandler.consume"]},{"name":"open override fun consume(event: Event<*>)","description":"application.handler.EventHandlers.TemperatureEventHandler.consume","location":"building-management-microservice/application.handler/-event-handlers/-temperature-event-handler/consume.html","searchKeys":["consume","open override fun consume(event: Event<*>)","application.handler.EventHandlers.TemperatureEventHandler.consume"]},{"name":"open override fun createMedicalTechnology(medicalTechnology: MedicalTechnology): MedicalTechnology?","description":"application.controller.MedicalTechnologyController.createMedicalTechnology","location":"building-management-microservice/application.controller/-medical-technology-controller/create-medical-technology.html","searchKeys":["createMedicalTechnology","open override fun createMedicalTechnology(medicalTechnology: MedicalTechnology): MedicalTechnology?","application.controller.MedicalTechnologyController.createMedicalTechnology"]},{"name":"open override fun createMedicalTechnologyDigitalTwin(medicalTechnology: MedicalTechnology): Boolean","description":"infrastructure.digitaltwins.DigitalTwinManager.createMedicalTechnologyDigitalTwin","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/create-medical-technology-digital-twin.html","searchKeys":["createMedicalTechnologyDigitalTwin","open override fun createMedicalTechnologyDigitalTwin(medicalTechnology: MedicalTechnology): Boolean","infrastructure.digitaltwins.DigitalTwinManager.createMedicalTechnologyDigitalTwin"]},{"name":"open override fun createRoom(room: Room): Room?","description":"application.controller.RoomController.createRoom","location":"building-management-microservice/application.controller/-room-controller/create-room.html","searchKeys":["createRoom","open override fun createRoom(room: Room): Room?","application.controller.RoomController.createRoom"]},{"name":"open override fun createRoomDigitalTwin(room: Room): Boolean","description":"infrastructure.digitaltwins.DigitalTwinManager.createRoomDigitalTwin","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/create-room-digital-twin.html","searchKeys":["createRoomDigitalTwin","open override fun createRoomDigitalTwin(room: Room): Boolean","infrastructure.digitaltwins.DigitalTwinManager.createRoomDigitalTwin"]},{"name":"open override fun deleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID): Boolean","description":"application.controller.MedicalTechnologyController.deleteMedicalTechnology","location":"building-management-microservice/application.controller/-medical-technology-controller/delete-medical-technology.html","searchKeys":["deleteMedicalTechnology","open override fun deleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID): Boolean","application.controller.MedicalTechnologyController.deleteMedicalTechnology"]},{"name":"open override fun deleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID): Boolean","description":"infrastructure.database.DatabaseManager.deleteMedicalTechnology","location":"building-management-microservice/infrastructure.database/-database-manager/delete-medical-technology.html","searchKeys":["deleteMedicalTechnology","open override fun deleteMedicalTechnology(medicalTechnologyId: MedicalTechnologyID): Boolean","infrastructure.database.DatabaseManager.deleteMedicalTechnology"]},{"name":"open override fun deleteMedicalTechnologyDigitalTwin(medicalTechnologyId: MedicalTechnologyID): Boolean","description":"infrastructure.digitaltwins.DigitalTwinManager.deleteMedicalTechnologyDigitalTwin","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/delete-medical-technology-digital-twin.html","searchKeys":["deleteMedicalTechnologyDigitalTwin","open override fun deleteMedicalTechnologyDigitalTwin(medicalTechnologyId: MedicalTechnologyID): Boolean","infrastructure.digitaltwins.DigitalTwinManager.deleteMedicalTechnologyDigitalTwin"]},{"name":"open override fun deleteRoom(roomId: RoomID): Boolean","description":"application.controller.RoomController.deleteRoom","location":"building-management-microservice/application.controller/-room-controller/delete-room.html","searchKeys":["deleteRoom","open override fun deleteRoom(roomId: RoomID): Boolean","application.controller.RoomController.deleteRoom"]},{"name":"open override fun deleteRoom(roomId: RoomID): Boolean","description":"infrastructure.database.DatabaseManager.deleteRoom","location":"building-management-microservice/infrastructure.database/-database-manager/delete-room.html","searchKeys":["deleteRoom","open override fun deleteRoom(roomId: RoomID): Boolean","infrastructure.database.DatabaseManager.deleteRoom"]},{"name":"open override fun deleteRoomDigitalTwin(roomId: RoomID): Boolean","description":"infrastructure.digitaltwins.DigitalTwinManager.deleteRoomDigitalTwin","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/delete-room-digital-twin.html","searchKeys":["deleteRoomDigitalTwin","open override fun deleteRoomDigitalTwin(roomId: RoomID): Boolean","infrastructure.digitaltwins.DigitalTwinManager.deleteRoomDigitalTwin"]},{"name":"open override fun execute(): Boolean","description":"application.service.MedicalTechnologyService.DeleteMedicalTechnology.execute","location":"building-management-microservice/application.service/-medical-technology-service/-delete-medical-technology/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.MedicalTechnologyService.DeleteMedicalTechnology.execute"]},{"name":"open override fun execute(): Boolean","description":"application.service.MedicalTechnologyService.MapMedicalTechnologyToRoom.execute","location":"building-management-microservice/application.service/-medical-technology-service/-map-medical-technology-to-room/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.MedicalTechnologyService.MapMedicalTechnologyToRoom.execute"]},{"name":"open override fun execute(): Boolean","description":"application.service.MedicalTechnologyService.UpdateMedicalTechnologyUsage.execute","location":"building-management-microservice/application.service/-medical-technology-service/-update-medical-technology-usage/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.MedicalTechnologyService.UpdateMedicalTechnologyUsage.execute"]},{"name":"open override fun execute(): Boolean","description":"application.service.RoomService.DeleteRoom.execute","location":"building-management-microservice/application.service/-room-service/-delete-room/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.RoomService.DeleteRoom.execute"]},{"name":"open override fun execute(): Boolean","description":"application.service.RoomService.UpdateRoomEnvironmentData.execute","location":"building-management-microservice/application.service/-room-service/-update-room-environment-data/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.RoomService.UpdateRoomEnvironmentData.execute"]},{"name":"open override fun execute(): MedicalTechnology?","description":"application.service.MedicalTechnologyService.CreateMedicalTechnology.execute","location":"building-management-microservice/application.service/-medical-technology-service/-create-medical-technology/execute.html","searchKeys":["execute","open override fun execute(): MedicalTechnology?","application.service.MedicalTechnologyService.CreateMedicalTechnology.execute"]},{"name":"open override fun execute(): MedicalTechnology?","description":"application.service.MedicalTechnologyService.GetMedicalTechnology.execute","location":"building-management-microservice/application.service/-medical-technology-service/-get-medical-technology/execute.html","searchKeys":["execute","open override fun execute(): MedicalTechnology?","application.service.MedicalTechnologyService.GetMedicalTechnology.execute"]},{"name":"open override fun execute(): Room?","description":"application.service.RoomService.CreateRoom.execute","location":"building-management-microservice/application.service/-room-service/-create-room/execute.html","searchKeys":["execute","open override fun execute(): Room?","application.service.RoomService.CreateRoom.execute"]},{"name":"open override fun execute(): Room?","description":"application.service.RoomService.GetRoom.execute","location":"building-management-microservice/application.service/-room-service/-get-room/execute.html","searchKeys":["execute","open override fun execute(): Room?","application.service.RoomService.GetRoom.execute"]},{"name":"open override fun execute(): Set<RoomEntry>","description":"application.service.RoomService.GetAllRoomEntry.execute","location":"building-management-microservice/application.service/-room-service/-get-all-room-entry/execute.html","searchKeys":["execute","open override fun execute(): Set<RoomEntry>","application.service.RoomService.GetAllRoomEntry.execute"]},{"name":"open override fun findBy(medicalTechnologyId: MedicalTechnologyID): MedicalTechnology?","description":"infrastructure.digitaltwins.DigitalTwinManager.findBy","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/find-by.html","searchKeys":["findBy","open override fun findBy(medicalTechnologyId: MedicalTechnologyID): MedicalTechnology?","infrastructure.digitaltwins.DigitalTwinManager.findBy"]},{"name":"open override fun findBy(medicalTechnologyId: MedicalTechnologyID, dateTime: Instant): MedicalTechnology?","description":"infrastructure.database.DatabaseManager.findBy","location":"building-management-microservice/infrastructure.database/-database-manager/find-by.html","searchKeys":["findBy","open override fun findBy(medicalTechnologyId: MedicalTechnologyID, dateTime: Instant): MedicalTechnology?","infrastructure.database.DatabaseManager.findBy"]},{"name":"open override fun findBy(medicalTechnologyId: MedicalTechnologyID, dateTime: Instant?): MedicalTechnology?","description":"application.controller.MedicalTechnologyController.findBy","location":"building-management-microservice/application.controller/-medical-technology-controller/find-by.html","searchKeys":["findBy","open override fun findBy(medicalTechnologyId: MedicalTechnologyID, dateTime: Instant?): MedicalTechnology?","application.controller.MedicalTechnologyController.findBy"]},{"name":"open override fun findBy(roomId: RoomID): Room?","description":"infrastructure.digitaltwins.DigitalTwinManager.findBy","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/find-by.html","searchKeys":["findBy","open override fun findBy(roomId: RoomID): Room?","infrastructure.digitaltwins.DigitalTwinManager.findBy"]},{"name":"open override fun findBy(roomId: RoomID, dateTime: Instant): Room?","description":"infrastructure.database.DatabaseManager.findBy","location":"building-management-microservice/infrastructure.database/-database-manager/find-by.html","searchKeys":["findBy","open override fun findBy(roomId: RoomID, dateTime: Instant): Room?","infrastructure.database.DatabaseManager.findBy"]},{"name":"open override fun findBy(roomId: RoomID, dateTime: Instant?): Room?","description":"application.controller.RoomController.findBy","location":"building-management-microservice/application.controller/-room-controller/find-by.html","searchKeys":["findBy","open override fun findBy(roomId: RoomID, dateTime: Instant?): Room?","application.controller.RoomController.findBy"]},{"name":"open override fun getAllRooms(): Set<Room>","description":"infrastructure.database.DatabaseManager.getAllRooms","location":"building-management-microservice/infrastructure.database/-database-manager/get-all-rooms.html","searchKeys":["getAllRooms","open override fun getAllRooms(): Set<Room>","infrastructure.database.DatabaseManager.getAllRooms"]},{"name":"open override fun getRooms(): Set<Room>","description":"application.controller.RoomController.getRooms","location":"building-management-microservice/application.controller/-room-controller/get-rooms.html","searchKeys":["getRooms","open override fun getRooms(): Set<Room>","application.controller.RoomController.getRooms"]},{"name":"open override fun hashCode(): Int","description":"entity.medicaltechnology.MedicalTechnology.hashCode","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.medicaltechnology.MedicalTechnology.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.zone.Room.hashCode","location":"building-management-microservice/entity.zone/-room/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.zone.Room.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.zone.Zone.hashCode","location":"building-management-microservice/entity.zone/-zone/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.zone.Zone.hashCode"]},{"name":"open override fun mapTechnologyTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","description":"application.controller.MedicalTechnologyController.mapTechnologyTo","location":"building-management-microservice/application.controller/-medical-technology-controller/map-technology-to.html","searchKeys":["mapTechnologyTo","open override fun mapTechnologyTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","application.controller.MedicalTechnologyController.mapTechnologyTo"]},{"name":"open override fun mapTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","description":"infrastructure.database.DatabaseManager.mapTo","location":"building-management-microservice/infrastructure.database/-database-manager/map-to.html","searchKeys":["mapTo","open override fun mapTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","infrastructure.database.DatabaseManager.mapTo"]},{"name":"open override fun mapTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","description":"infrastructure.digitaltwins.DigitalTwinManager.mapTo","location":"building-management-microservice/infrastructure.digitaltwins/-digital-twin-manager/map-to.html","searchKeys":["mapTo","open override fun mapTo(medicalTechnologyId: MedicalTechnologyID, roomId: RoomID?): Boolean","infrastructure.digitaltwins.DigitalTwinManager.mapTo"]},{"name":"open override fun saveMedicalTechnology(medicalTechnology: MedicalTechnology): Boolean","description":"infrastructure.database.DatabaseManager.saveMedicalTechnology","location":"building-management-microservice/infrastructure.database/-database-manager/save-medical-technology.html","searchKeys":["saveMedicalTechnology","open override fun saveMedicalTechnology(medicalTechnology: MedicalTechnology): Boolean","infrastructure.database.DatabaseManager.saveMedicalTechnology"]},{"name":"open override fun saveRoom(room: Room): Boolean","description":"infrastructure.database.DatabaseManager.saveRoom","location":"building-management-microservice/infrastructure.database/-database-manager/save-room.html","searchKeys":["saveRoom","open override fun saveRoom(room: Room): Boolean","infrastructure.database.DatabaseManager.saveRoom"]},{"name":"open override fun updateMedicalTechnologyUsage(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, roomId: RoomID, dateTime: Instant): Boolean","description":"application.controller.MedicalTechnologyController.updateMedicalTechnologyUsage","location":"building-management-microservice/application.controller/-medical-technology-controller/update-medical-technology-usage.html","searchKeys":["updateMedicalTechnologyUsage","open override fun updateMedicalTechnologyUsage(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, roomId: RoomID, dateTime: Instant): Boolean","application.controller.MedicalTechnologyController.updateMedicalTechnologyUsage"]},{"name":"open override fun updateMedicalTechnologyUsage(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, roomId: RoomID, dateTime: Instant): Boolean","description":"infrastructure.database.DatabaseManager.updateMedicalTechnologyUsage","location":"building-management-microservice/infrastructure.database/-database-manager/update-medical-technology-usage.html","searchKeys":["updateMedicalTechnologyUsage","open override fun updateMedicalTechnologyUsage(medicalTechnologyId: MedicalTechnologyID, usage: Boolean, roomId: RoomID, dateTime: Instant): Boolean","infrastructure.database.DatabaseManager.updateMedicalTechnologyUsage"]},{"name":"open override fun updateRoomEnvironmentalData(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant): Boolean","description":"application.controller.RoomController.updateRoomEnvironmentalData","location":"building-management-microservice/application.controller/-room-controller/update-room-environmental-data.html","searchKeys":["updateRoomEnvironmentalData","open override fun updateRoomEnvironmentalData(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant): Boolean","application.controller.RoomController.updateRoomEnvironmentalData"]},{"name":"open override fun updateRoomEnvironmentalData(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant): Boolean","description":"infrastructure.database.DatabaseManager.updateRoomEnvironmentalData","location":"building-management-microservice/infrastructure.database/-database-manager/update-room-environmental-data.html","searchKeys":["updateRoomEnvironmentalData","open override fun updateRoomEnvironmentalData(roomId: RoomID, environmentalData: RoomEnvironmentalData, dateTime: Instant): Boolean","infrastructure.database.DatabaseManager.updateRoomEnvironmentalData"]},{"name":"open override val data: E","description":"application.presenter.event.model.RoomEvent.data","location":"building-management-microservice/application.presenter.event.model/-room-event/data.html","searchKeys":["data","open override val data: E","application.presenter.event.model.RoomEvent.data"]},{"name":"open override val data: MedicalTechnologyUsagePayload","description":"application.presenter.event.model.MedicalTechnologyEvent.data","location":"building-management-microservice/application.presenter.event.model/-medical-technology-event/data.html","searchKeys":["data","open override val data: MedicalTechnologyUsagePayload","application.presenter.event.model.MedicalTechnologyEvent.data"]},{"name":"open override val dateTime: String","description":"application.presenter.event.model.MedicalTechnologyEvent.dateTime","location":"building-management-microservice/application.presenter.event.model/-medical-technology-event/date-time.html","searchKeys":["dateTime","open override val dateTime: String","application.presenter.event.model.MedicalTechnologyEvent.dateTime"]},{"name":"open override val dateTime: String","description":"application.presenter.event.model.RoomEvent.dateTime","location":"building-management-microservice/application.presenter.event.model/-room-event/date-time.html","searchKeys":["dateTime","open override val dateTime: String","application.presenter.event.model.RoomEvent.dateTime"]},{"name":"open override val key: String","description":"application.presenter.event.model.MedicalTechnologyEvent.key","location":"building-management-microservice/application.presenter.event.model/-medical-technology-event/key.html","searchKeys":["key","open override val key: String","application.presenter.event.model.MedicalTechnologyEvent.key"]},{"name":"open override val key: String","description":"application.presenter.event.model.RoomEvent.key","location":"building-management-microservice/application.presenter.event.model/-room-event/key.html","searchKeys":["key","open override val key: String","application.presenter.event.model.RoomEvent.key"]},{"name":"open override val medicalTechnologyDatabaseManager: DatabaseManager","description":"infrastructure.provider.ManagerProviderImpl.medicalTechnologyDatabaseManager","location":"building-management-microservice/infrastructure.provider/-manager-provider-impl/medical-technology-database-manager.html","searchKeys":["medicalTechnologyDatabaseManager","open override val medicalTechnologyDatabaseManager: DatabaseManager","infrastructure.provider.ManagerProviderImpl.medicalTechnologyDatabaseManager"]},{"name":"open override val medicalTechnologyDigitalTwinManager: DigitalTwinManager","description":"infrastructure.provider.ManagerProviderImpl.medicalTechnologyDigitalTwinManager","location":"building-management-microservice/infrastructure.provider/-manager-provider-impl/medical-technology-digital-twin-manager.html","searchKeys":["medicalTechnologyDigitalTwinManager","open override val medicalTechnologyDigitalTwinManager: DigitalTwinManager","infrastructure.provider.ManagerProviderImpl.medicalTechnologyDigitalTwinManager"]},{"name":"open override val roomDatabaseManager: DatabaseManager","description":"infrastructure.provider.ManagerProviderImpl.roomDatabaseManager","location":"building-management-microservice/infrastructure.provider/-manager-provider-impl/room-database-manager.html","searchKeys":["roomDatabaseManager","open override val roomDatabaseManager: DatabaseManager","infrastructure.provider.ManagerProviderImpl.roomDatabaseManager"]},{"name":"open override val roomDigitalTwinManager: DigitalTwinManager","description":"infrastructure.provider.ManagerProviderImpl.roomDigitalTwinManager","location":"building-management-microservice/infrastructure.provider/-manager-provider-impl/room-digital-twin-manager.html","searchKeys":["roomDigitalTwinManager","open override val roomDigitalTwinManager: DigitalTwinManager","infrastructure.provider.ManagerProviderImpl.roomDigitalTwinManager"]},{"name":"val dateTime: Instant","description":"application.presenter.database.model.TimeSeriesMedicalTechnologyUsage.dateTime","location":"building-management-microservice/application.presenter.database.model/-time-series-medical-technology-usage/date-time.html","searchKeys":["dateTime","val dateTime: Instant","application.presenter.database.model.TimeSeriesMedicalTechnologyUsage.dateTime"]},{"name":"val dateTime: Instant","description":"application.presenter.database.model.TimeSeriesRoomEnvironmentalData.dateTime","location":"building-management-microservice/application.presenter.database.model/-time-series-room-environmental-data/date-time.html","searchKeys":["dateTime","val dateTime: Instant","application.presenter.database.model.TimeSeriesRoomEnvironmentalData.dateTime"]},{"name":"val description: String","description":"application.presenter.api.model.MedicalTechnologyApiDto.description","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto/description.html","searchKeys":["description","val description: String","application.presenter.api.model.MedicalTechnologyApiDto.description"]},{"name":"val description: String","description":"application.presenter.api.model.MedicalTechnologyEntry.description","location":"building-management-microservice/application.presenter.api.model/-medical-technology-entry/description.html","searchKeys":["description","val description: String","application.presenter.api.model.MedicalTechnologyEntry.description"]},{"name":"val description: String","description":"entity.medicaltechnology.MedicalTechnology.description","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/description.html","searchKeys":["description","val description: String","entity.medicaltechnology.MedicalTechnology.description"]},{"name":"val description: String","description":"entity.zone.Zone.description","location":"building-management-microservice/entity.zone/-zone/description.html","searchKeys":["description","val description: String","entity.zone.Zone.description"]},{"name":"val entries: List<T>","description":"infrastructure.api.util.ApiResponses.ResponseEntryList.entries","location":"building-management-microservice/infrastructure.api.util/-api-responses/-response-entry-list/entries.html","searchKeys":["entries","val entries: List<T>","infrastructure.api.util.ApiResponses.ResponseEntryList.entries"]},{"name":"val entry: T","description":"infrastructure.api.util.ApiResponses.ResponseEntry.entry","location":"building-management-microservice/infrastructure.api.util/-api-responses/-response-entry/entry.html","searchKeys":["entry","val entry: T","infrastructure.api.util.ApiResponses.ResponseEntry.entry"]},{"name":"val environmentalData: EnvironmentalDataApiDto","description":"application.presenter.api.model.RoomApiDto.environmentalData","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/environmental-data.html","searchKeys":["environmentalData","val environmentalData: EnvironmentalDataApiDto","application.presenter.api.model.RoomApiDto.environmentalData"]},{"name":"val environmentalData: RoomEnvironmentalData","description":"entity.zone.Room.environmentalData","location":"building-management-microservice/entity.zone/-room/environmental-data.html","searchKeys":["environmentalData","val environmentalData: RoomEnvironmentalData","entity.zone.Room.environmentalData"]},{"name":"val humidity: Double? = null","description":"application.presenter.api.model.EnvironmentalDataApiDto.humidity","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/humidity.html","searchKeys":["humidity","val humidity: Double? = null","application.presenter.api.model.EnvironmentalDataApiDto.humidity"]},{"name":"val humidity: Humidity? = null","description":"entity.zone.RoomEnvironmentalData.humidity","location":"building-management-microservice/entity.zone/-room-environmental-data/humidity.html","searchKeys":["humidity","val humidity: Humidity? = null","entity.zone.RoomEnvironmentalData.humidity"]},{"name":"val humidityPercentage: Int","description":"application.presenter.event.model.RoomEventPayloads.HumidityPayload.humidityPercentage","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-humidity-payload/humidity-percentage.html","searchKeys":["humidityPercentage","val humidityPercentage: Int","application.presenter.event.model.RoomEventPayloads.HumidityPayload.humidityPercentage"]},{"name":"val id: MedicalTechnologyID","description":"entity.medicaltechnology.MedicalTechnology.id","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/id.html","searchKeys":["id","val id: MedicalTechnologyID","entity.medicaltechnology.MedicalTechnology.id"]},{"name":"val id: RoomID","description":"entity.zone.Room.id","location":"building-management-microservice/entity.zone/-room/id.html","searchKeys":["id","val id: RoomID","entity.zone.Room.id"]},{"name":"val id: String","description":"application.presenter.api.model.MedicalTechnologyApiDto.id","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto/id.html","searchKeys":["id","val id: String","application.presenter.api.model.MedicalTechnologyApiDto.id"]},{"name":"val id: String","description":"application.presenter.api.model.MedicalTechnologyEntry.id","location":"building-management-microservice/application.presenter.api.model/-medical-technology-entry/id.html","searchKeys":["id","val id: String","application.presenter.api.model.MedicalTechnologyEntry.id"]},{"name":"val id: String","description":"application.presenter.api.model.RoomApiDto.id","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/id.html","searchKeys":["id","val id: String","application.presenter.api.model.RoomApiDto.id"]},{"name":"val id: String","description":"application.presenter.api.model.RoomEntry.id","location":"building-management-microservice/application.presenter.api.model/-room-entry/id.html","searchKeys":["id","val id: String","application.presenter.api.model.RoomEntry.id"]},{"name":"val id: ZoneID","description":"entity.zone.Zone.id","location":"building-management-microservice/entity.zone/-zone/id.html","searchKeys":["id","val id: ZoneID","entity.zone.Zone.id"]},{"name":"val inUse: Boolean","description":"application.presenter.event.model.MedicalTechnologyUsagePayload.inUse","location":"building-management-microservice/application.presenter.event.model/-medical-technology-usage-payload/in-use.html","searchKeys":["inUse","val inUse: Boolean","application.presenter.event.model.MedicalTechnologyUsagePayload.inUse"]},{"name":"val inUse: Boolean = false","description":"application.presenter.api.model.MedicalTechnologyApiDto.inUse","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto/in-use.html","searchKeys":["inUse","val inUse: Boolean = false","application.presenter.api.model.MedicalTechnologyApiDto.inUse"]},{"name":"val isInUse: Boolean = false","description":"entity.medicaltechnology.MedicalTechnology.isInUse","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/is-in-use.html","searchKeys":["isInUse","val isInUse: Boolean = false","entity.medicaltechnology.MedicalTechnology.isInUse"]},{"name":"val luminosity: Luminosity? = null","description":"entity.zone.RoomEnvironmentalData.luminosity","location":"building-management-microservice/entity.zone/-room-environmental-data/luminosity.html","searchKeys":["luminosity","val luminosity: Luminosity? = null","entity.zone.RoomEnvironmentalData.luminosity"]},{"name":"val luminosity: ValueWithUnit<Double>? = null","description":"application.presenter.api.model.EnvironmentalDataApiDto.luminosity","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/luminosity.html","searchKeys":["luminosity","val luminosity: ValueWithUnit<Double>? = null","application.presenter.api.model.EnvironmentalDataApiDto.luminosity"]},{"name":"val luminosityUnit: RoomEventPayloads.LuminosityPayloadUnit","description":"application.presenter.event.model.RoomEventPayloads.LuminosityPayload.luminosityUnit","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-luminosity-payload/luminosity-unit.html","searchKeys":["luminosityUnit","val luminosityUnit: RoomEventPayloads.LuminosityPayloadUnit","application.presenter.event.model.RoomEventPayloads.LuminosityPayload.luminosityUnit"]},{"name":"val luminosityValue: Double","description":"application.presenter.event.model.RoomEventPayloads.LuminosityPayload.luminosityValue","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-luminosity-payload/luminosity-value.html","searchKeys":["luminosityValue","val luminosityValue: Double","application.presenter.event.model.RoomEventPayloads.LuminosityPayload.luminosityValue"]},{"name":"val medicalTechnologyID: String","description":"application.presenter.event.model.MedicalTechnologyUsagePayload.medicalTechnologyID","location":"building-management-microservice/application.presenter.event.model/-medical-technology-usage-payload/medical-technology-i-d.html","searchKeys":["medicalTechnologyID","val medicalTechnologyID: String","application.presenter.event.model.MedicalTechnologyUsagePayload.medicalTechnologyID"]},{"name":"val medicalTechnologyId: MedicalTechnologyID","description":"application.presenter.database.model.TimeSeriesMedicalTechnologyMetadata.medicalTechnologyId","location":"building-management-microservice/application.presenter.database.model/-time-series-medical-technology-metadata/medical-technology-id.html","searchKeys":["medicalTechnologyId","val medicalTechnologyId: MedicalTechnologyID","application.presenter.database.model.TimeSeriesMedicalTechnologyMetadata.medicalTechnologyId"]},{"name":"val metadata: TimeSeriesMedicalTechnologyMetadata","description":"application.presenter.database.model.TimeSeriesMedicalTechnologyUsage.metadata","location":"building-management-microservice/application.presenter.database.model/-time-series-medical-technology-usage/metadata.html","searchKeys":["metadata","val metadata: TimeSeriesMedicalTechnologyMetadata","application.presenter.database.model.TimeSeriesMedicalTechnologyUsage.metadata"]},{"name":"val metadata: TimeSeriesRoomMetadata","description":"application.presenter.database.model.TimeSeriesRoomEnvironmentalData.metadata","location":"building-management-microservice/application.presenter.database.model/-time-series-room-environmental-data/metadata.html","searchKeys":["metadata","val metadata: TimeSeriesRoomMetadata","application.presenter.database.model.TimeSeriesRoomEnvironmentalData.metadata"]},{"name":"val name: String","description":"application.presenter.api.model.MedicalTechnologyApiDto.name","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto/name.html","searchKeys":["name","val name: String","application.presenter.api.model.MedicalTechnologyApiDto.name"]},{"name":"val name: String","description":"application.presenter.api.model.MedicalTechnologyEntry.name","location":"building-management-microservice/application.presenter.api.model/-medical-technology-entry/name.html","searchKeys":["name","val name: String","application.presenter.api.model.MedicalTechnologyEntry.name"]},{"name":"val name: String","description":"application.presenter.api.model.RoomApiDto.name","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/name.html","searchKeys":["name","val name: String","application.presenter.api.model.RoomApiDto.name"]},{"name":"val name: String","description":"application.presenter.api.model.RoomEntry.name","location":"building-management-microservice/application.presenter.api.model/-room-entry/name.html","searchKeys":["name","val name: String","application.presenter.api.model.RoomEntry.name"]},{"name":"val name: String","description":"entity.medicaltechnology.MedicalTechnology.name","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/name.html","searchKeys":["name","val name: String","entity.medicaltechnology.MedicalTechnology.name"]},{"name":"val name: String","description":"entity.zone.Zone.name","location":"building-management-microservice/entity.zone/-zone/name.html","searchKeys":["name","val name: String","entity.zone.Zone.name"]},{"name":"val name: String? = null","description":"entity.zone.Room.name","location":"building-management-microservice/entity.zone/-room/name.html","searchKeys":["name","val name: String? = null","entity.zone.Room.name"]},{"name":"val percentage: Double","description":"entity.environment.Humidity.percentage","location":"building-management-microservice/entity.environment/-humidity/percentage.html","searchKeys":["percentage","val percentage: Double","entity.environment.Humidity.percentage"]},{"name":"val presence: Boolean? = null","description":"application.presenter.api.model.EnvironmentalDataApiDto.presence","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/presence.html","searchKeys":["presence","val presence: Boolean? = null","application.presenter.api.model.EnvironmentalDataApiDto.presence"]},{"name":"val presence: Presence? = null","description":"entity.zone.RoomEnvironmentalData.presence","location":"building-management-microservice/entity.zone/-room-environmental-data/presence.html","searchKeys":["presence","val presence: Presence? = null","entity.zone.RoomEnvironmentalData.presence"]},{"name":"val presenceDetected: Boolean","description":"application.presenter.event.model.RoomEventPayloads.PresencePayload.presenceDetected","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-presence-payload/presence-detected.html","searchKeys":["presenceDetected","val presenceDetected: Boolean","application.presenter.event.model.RoomEventPayloads.PresencePayload.presenceDetected"]},{"name":"val presenceDetected: Boolean","description":"entity.environment.Presence.presenceDetected","location":"building-management-microservice/entity.environment/-presence/presence-detected.html","searchKeys":["presenceDetected","val presenceDetected: Boolean","entity.environment.Presence.presenceDetected"]},{"name":"val query: String","description":"infrastructure.digitaltwins.query.AdtQuery.query","location":"building-management-microservice/infrastructure.digitaltwins.query/-adt-query/query.html","searchKeys":["query","val query: String","infrastructure.digitaltwins.query.AdtQuery.query"]},{"name":"val roomId: RoomID","description":"application.presenter.database.model.TimeSeriesMedicalTechnologyMetadata.roomId","location":"building-management-microservice/application.presenter.database.model/-time-series-medical-technology-metadata/room-id.html","searchKeys":["roomId","val roomId: RoomID","application.presenter.database.model.TimeSeriesMedicalTechnologyMetadata.roomId"]},{"name":"val roomId: RoomID","description":"application.presenter.database.model.TimeSeriesRoomMetadata.roomId","location":"building-management-microservice/application.presenter.database.model/-time-series-room-metadata/room-id.html","searchKeys":["roomId","val roomId: RoomID","application.presenter.database.model.TimeSeriesRoomMetadata.roomId"]},{"name":"val roomId: RoomID? = null","description":"entity.medicaltechnology.MedicalTechnology.roomId","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/room-id.html","searchKeys":["roomId","val roomId: RoomID? = null","entity.medicaltechnology.MedicalTechnology.roomId"]},{"name":"val roomId: String","description":"application.presenter.event.model.RoomEvent.roomId","location":"building-management-microservice/application.presenter.event.model/-room-event/room-id.html","searchKeys":["roomId","val roomId: String","application.presenter.event.model.RoomEvent.roomId"]},{"name":"val roomId: String?","description":"application.presenter.api.model.MedicalTechnologyPatch.roomId","location":"building-management-microservice/application.presenter.api.model/-medical-technology-patch/room-id.html","searchKeys":["roomId","val roomId: String?","application.presenter.api.model.MedicalTechnologyPatch.roomId"]},{"name":"val roomId: String? = null","description":"application.presenter.api.model.MedicalTechnologyApiDto.roomId","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto/room-id.html","searchKeys":["roomId","val roomId: String? = null","application.presenter.api.model.MedicalTechnologyApiDto.roomId"]},{"name":"val temperature: Temperature? = null","description":"entity.zone.RoomEnvironmentalData.temperature","location":"building-management-microservice/entity.zone/-room-environmental-data/temperature.html","searchKeys":["temperature","val temperature: Temperature? = null","entity.zone.RoomEnvironmentalData.temperature"]},{"name":"val temperature: ValueWithUnit<Double>? = null","description":"application.presenter.api.model.EnvironmentalDataApiDto.temperature","location":"building-management-microservice/application.presenter.api.model/-environmental-data-api-dto/temperature.html","searchKeys":["temperature","val temperature: ValueWithUnit<Double>? = null","application.presenter.api.model.EnvironmentalDataApiDto.temperature"]},{"name":"val temperatureUnit: RoomEventPayloads.TemperaturePayloadUnit","description":"application.presenter.event.model.RoomEventPayloads.TemperaturePayload.temperatureUnit","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-temperature-payload/temperature-unit.html","searchKeys":["temperatureUnit","val temperatureUnit: RoomEventPayloads.TemperaturePayloadUnit","application.presenter.event.model.RoomEventPayloads.TemperaturePayload.temperatureUnit"]},{"name":"val temperatureValue: Double","description":"application.presenter.event.model.RoomEventPayloads.TemperaturePayload.temperatureValue","location":"building-management-microservice/application.presenter.event.model/-room-event-payloads/-temperature-payload/temperature-value.html","searchKeys":["temperatureValue","val temperatureValue: Double","application.presenter.event.model.RoomEventPayloads.TemperaturePayload.temperatureValue"]},{"name":"val total: Int","description":"infrastructure.api.util.ApiResponses.ResponseEntryList.total","location":"building-management-microservice/infrastructure.api.util/-api-responses/-response-entry-list/total.html","searchKeys":["total","val total: Int","infrastructure.api.util.ApiResponses.ResponseEntryList.total"]},{"name":"val type: MedicalTechnologyApiDtoType","description":"application.presenter.api.model.MedicalTechnologyApiDto.type","location":"building-management-microservice/application.presenter.api.model/-medical-technology-api-dto/type.html","searchKeys":["type","val type: MedicalTechnologyApiDtoType","application.presenter.api.model.MedicalTechnologyApiDto.type"]},{"name":"val type: MedicalTechnologyApiDtoType","description":"application.presenter.api.model.MedicalTechnologyEntry.type","location":"building-management-microservice/application.presenter.api.model/-medical-technology-entry/type.html","searchKeys":["type","val type: MedicalTechnologyApiDtoType","application.presenter.api.model.MedicalTechnologyEntry.type"]},{"name":"val type: MedicalTechnologyType","description":"entity.medicaltechnology.MedicalTechnology.type","location":"building-management-microservice/entity.medicaltechnology/-medical-technology/type.html","searchKeys":["type","val type: MedicalTechnologyType","entity.medicaltechnology.MedicalTechnology.type"]},{"name":"val type: RoomApiDtoType","description":"application.presenter.api.model.RoomApiDto.type","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/type.html","searchKeys":["type","val type: RoomApiDtoType","application.presenter.api.model.RoomApiDto.type"]},{"name":"val type: RoomApiDtoType","description":"application.presenter.api.model.RoomEntry.type","location":"building-management-microservice/application.presenter.api.model/-room-entry/type.html","searchKeys":["type","val type: RoomApiDtoType","application.presenter.api.model.RoomEntry.type"]},{"name":"val type: RoomType","description":"entity.zone.Room.type","location":"building-management-microservice/entity.zone/-room/type.html","searchKeys":["type","val type: RoomType","entity.zone.Room.type"]},{"name":"val type: TimeSeriesDataType","description":"application.presenter.database.model.TimeSeriesRoomMetadata.type","location":"building-management-microservice/application.presenter.database.model/-time-series-room-metadata/type.html","searchKeys":["type","val type: TimeSeriesDataType","application.presenter.database.model.TimeSeriesRoomMetadata.type"]},{"name":"val unit: LightUnit","description":"entity.environment.Luminosity.unit","location":"building-management-microservice/entity.environment/-luminosity/unit.html","searchKeys":["unit","val unit: LightUnit","entity.environment.Luminosity.unit"]},{"name":"val unit: String","description":"application.presenter.api.model.ValueWithUnit.unit","location":"building-management-microservice/application.presenter.api.model/-value-with-unit/unit.html","searchKeys":["unit","val unit: String","application.presenter.api.model.ValueWithUnit.unit"]},{"name":"val unit: String? = null","description":"application.presenter.database.model.TimeSeriesRoomMetadata.unit","location":"building-management-microservice/application.presenter.database.model/-time-series-room-metadata/unit.html","searchKeys":["unit","val unit: String? = null","application.presenter.database.model.TimeSeriesRoomMetadata.unit"]},{"name":"val unit: TemperatureUnit","description":"entity.environment.Temperature.unit","location":"building-management-microservice/entity.environment/-temperature/unit.html","searchKeys":["unit","val unit: TemperatureUnit","entity.environment.Temperature.unit"]},{"name":"val url: String","description":"infrastructure.api.util.ApiResponses.ResponseEntry.url","location":"building-management-microservice/infrastructure.api.util/-api-responses/-response-entry/url.html","searchKeys":["url","val url: String","infrastructure.api.util.ApiResponses.ResponseEntry.url"]},{"name":"val value: Boolean","description":"application.presenter.database.model.TimeSeriesMedicalTechnologyUsage.value","location":"building-management-microservice/application.presenter.database.model/-time-series-medical-technology-usage/value.html","searchKeys":["value","val value: Boolean","application.presenter.database.model.TimeSeriesMedicalTechnologyUsage.value"]},{"name":"val value: Double","description":"application.presenter.database.model.TimeSeriesRoomEnvironmentalData.value","location":"building-management-microservice/application.presenter.database.model/-time-series-room-environmental-data/value.html","searchKeys":["value","val value: Double","application.presenter.database.model.TimeSeriesRoomEnvironmentalData.value"]},{"name":"val value: Double","description":"entity.environment.Luminosity.value","location":"building-management-microservice/entity.environment/-luminosity/value.html","searchKeys":["value","val value: Double","entity.environment.Luminosity.value"]},{"name":"val value: Double","description":"entity.environment.Temperature.value","location":"building-management-microservice/entity.environment/-temperature/value.html","searchKeys":["value","val value: Double","entity.environment.Temperature.value"]},{"name":"val value: String","description":"entity.medicaltechnology.MedicalTechnologyID.value","location":"building-management-microservice/entity.medicaltechnology/-medical-technology-i-d/value.html","searchKeys":["value","val value: String","entity.medicaltechnology.MedicalTechnologyID.value"]},{"name":"val value: String","description":"entity.zone.RoomID.value","location":"building-management-microservice/entity.zone/-room-i-d/value.html","searchKeys":["value","val value: String","entity.zone.RoomID.value"]},{"name":"val value: String","description":"entity.zone.ZoneID.value","location":"building-management-microservice/entity.zone/-zone-i-d/value.html","searchKeys":["value","val value: String","entity.zone.ZoneID.value"]},{"name":"val value: T","description":"application.presenter.api.model.ValueWithUnit.value","location":"building-management-microservice/application.presenter.api.model/-value-with-unit/value.html","searchKeys":["value","val value: T","application.presenter.api.model.ValueWithUnit.value"]},{"name":"val zoneId: String","description":"application.presenter.api.model.RoomApiDto.zoneId","location":"building-management-microservice/application.presenter.api.model/-room-api-dto/zone-id.html","searchKeys":["zoneId","val zoneId: String","application.presenter.api.model.RoomApiDto.zoneId"]},{"name":"val zoneId: String","description":"application.presenter.api.model.RoomEntry.zoneId","location":"building-management-microservice/application.presenter.api.model/-room-entry/zone-id.html","searchKeys":["zoneId","val zoneId: String","application.presenter.api.model.RoomEntry.zoneId"]},{"name":"val zoneId: ZoneID","description":"entity.zone.Room.zoneId","location":"building-management-microservice/entity.zone/-room/zone-id.html","searchKeys":["zoneId","val zoneId: ZoneID","entity.zone.Room.zoneId"]}]
