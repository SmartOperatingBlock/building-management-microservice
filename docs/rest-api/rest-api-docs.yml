openapi: 3.0.0
servers:
  - description: Building Management microservice
    url: http://localhost:<port>/api
info:
  description: This is the API of the Building Management microservice within the Smart Operating Block project
  version: "0.1.0"
  title: Building Management API
  contact:
    email: info@smartoperatingblock.com
  license:
    name: MIT License
    url: 'https://opensource.org/license/mit/'

paths:
  /rooms:
    post:
      summary: insert a new room
      operationId: insertRoom
      description: Add new room to the operating block
      responses:
        '201':
          description: room created
        '400':
          description: invalid input, object invalid
        '409':
          description: a room with the same id already exists
        '500':
          description: server error occurred
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
        description: Room to add

  /rooms/{room-id}:
    get:
      summary: get the room information
      operationId: getRoom
      description: Get room information
      parameters:
        - in: path
          name: room-id
          description: the room's ID
          required: true
          schema:
            type: string
        - in: query
          name: dateTime
          required: false
          description: Specify a past date in order to obtain historical data
          schema:
            type: string
            format: date-time
            example: '2017-07-21T17:32:28Z'
      responses:
        '200':
          description: search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '404':
          description: room not found
        '500':
          description: server error occurred
    delete:
      summary: delete the room
      operationId: deleteRoom
      description: Delete a room
      parameters:
        - in: path
          name: room-id
          description: the room's ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: room deleted
        '404':
          description: room not found
        '500':
          description: server error occurred

  /medicalTechnologies:
    post:
      summary: insert a new medical technology
      operationId: insertMedicalTechnology
      description: Add new medical technology to the operating block
      responses:
        '201':
          description: medical technology created
        '400':
          description: invalid input, object invalid
        '409':
          description: a medical technology with the same id already exists
        '500':
          description: server error occurred
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalTechnology'
        description: Medical Technology to add

  /medicalTechnologies/{technology-id}:
    get:
      summary: get the medical technology information
      operationId: getMedicalTechnology
      description: Get medical technology information
      parameters:
        - in: path
          name: technology-id
          description: the medical technology's ID
          required: true
          schema:
            type: string
        - in: query
          name: dateTime
          required: false
          description: Specify a past date in order to obtain historical data
          schema:
            type: string
            format: date-time
            example: '2017-07-21T17:32:28Z'
      responses:
        '200':
          description: search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalTechnology'
        '404':
          description: medical technology not found
        '500':
          description: server error occurred
    delete:
      summary: delete the medical technology
      operationId: deleteMedicalTechnology
      description: Delete a medical technology
      parameters:
        - in: path
          name: technology-id
          description: the medical technology's ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: medical technology deleted
        '404':
          description: medical technology not found
        '500':
          description: server error occurred
    patch:
      summary: update medical technology mapping
      operationId: updateMedicalTechnology
      description: Map the medical technology to a room inside the Operating Block
      parameters:
        - in: path
          name: technology-id
          description: the medical technology's ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              type: object
              properties:
                room-id:
                  type: string
                  example: Room-#2
                  description: room to specify a new mapping, null if you want to delete mapping
        description: the new mapping
      responses:
        '204':
          description: medical technology updated
        '400':
          description: malformed merge patch file
        '404':
          description: medical technology not found
        '500':
          description: server error occurred

components:
  schemas:
    Room:
      type: object
      properties:
        id:
          type: string
          example: Room-#1
        name:
          type: string
          example: Mario Rossi's Operating Room - Bufalini Hospital
        zone-id:
          type: string
          example: Zone-#1
        type:
          type: string
          enum: [operating-room, pre-operating-room]
          example: operating-room
        environmental-data:
          $ref: '#/components/schemas/RoomEnvironmentalData'

    RoomEnvironmentalData:
      type: object
      properties:
        temperature:
          type: object
          properties:
            value:
              type: number
              example: 25.3
            unit:
              type: string
              enum: [celsius, fahrenheit]
              example: celsius
        humidity:
          type: number
          example: 55.5
        luminosity:
          type: object
          properties:
            value:
              type: number
              example: 150.5
            unit:
              type: string
              enum: [lux]
              example: lux
        presence:
          type: boolean
          example: true

    MedicalTechnology:
      type: object
      properties:
        id:
          type: string
          example: mt-#1
        name:
          type: string
          example: Endoscope
        description:
          type: string
        in-use:
          type: boolean
        room-id:
          type: string
          example: Room-#1
        type:
          type: string
          enum: [endoscope, xray]
          example: endoscope